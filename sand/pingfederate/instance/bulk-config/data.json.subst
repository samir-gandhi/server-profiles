{
    "metadata": {"pfVersion": "10.1.2.0"},
    "operations": [
        {
            "operationType": "SAVE",
            "subResource": "cors-configuration",
            "items": [
                {
                    "stringValue": "X-Requested-With,Content-Type,Accept,Origin,Authorization",
                    "id": "allowedHeaders",
                    "type": "STRING"
                },
                {
                    "stringValue": "GET,POST,HEAD",
                    "id": "allowedMethods",
                    "type": "STRING"
                },
                {
                    "stringValue": "/as/token.oauth2,/as/revoke_token.oauth2,/idp/userinfo.openid,/pf-ws/rest/oauth/grants/,/pf/JWKS,/.well-known/openid-configuration,/as/bc-auth.ciba,/ext/oob-auth/approve,/ext/oob-auth/deny",
                    "id": "urlPatterns",
                    "type": "STRING"
                }
            ],
            "resourceType": "/configStore"
        },
        {
            "resourceType": "/configStore",
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.domain.ClientManagerJdbcImpl",
            "items": [
                {
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING",
                    "stringValue": "JDBC-4669059DA7EDB196F12EBB5B9C9644C8887CF22F"
                }
            ]
        },
        {
            "resourceType": "/configStore",
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.service.session.data.impl.SessionStorageManagerJdbcImpl",
            "items": [
                {
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING",
                    "stringValue": "JDBC-4669059DA7EDB196F12EBB5B9C9644C8887CF22F"
                },
                {
                    "id": "ExpirationTimeColumnName",
                    "type": "STRING",
                    "stringValue": "last_activity_time"
                }
            ]
        },
                {
            "resourceType": "/configStore",
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.service.impl.AccountLinkingServiceDBImpl",
            "items": [
                {
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING",
                    "stringValue": "JDBC-4669059DA7EDB196F12EBB5B9C9644C8887CF22F"
                }
            ]
        },
        {
            "resourceType": "/configStore",
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.token.AccessGrantManagerJdbcImpl",
            "items": [
                {
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING",
                    "stringValue": "JDBC-4669059DA7EDB196F12EBB5B9C9644C8887CF22F"
                }
            ]
        },
        {
            "itemIds": ["client_id"],
            "operationType": "DELETE",
            "subResource": "http-request-parameter-validation",
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.common.ExpressionManager",
            "items": [{
                "stringValue": "true",
                "id": "evaluateExpressions",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "timer-intervals",
            "resourceType": "/configStore",
            "items": [{
                "stringValue": "6000",
                "id": "StoredSessionCleanerInterval",
                "type": "STRING"
            },
            {
                "stringValue": "43200000",
                "id": "CertExpirationNotifierTimerInterval",
                "type": "STRING"
            },
            {
                "stringValue": "86400000",
                "id": "AccessGrantCleanerInterval",
                "type": "STRING"
            },
            {
                "stringValue": "5000",
                "id": "ConnectionImportTimerInterval",
                "type": "STRING"
            },
            {
                "stringValue": "5000",
                "id": "ConfigArchiveDeployTimerInterval",
                "type": "STRING"
            }]
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.domain.ClientManagerLdapImpl",
            "items": [
                {
                    "stringValue": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING"
                },
                {
                    "stringValue": "ou=oauthClients,dc=example,dc=com",
                    "id": "SearchBase",
                    "type": "STRING"
                }
            ],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.domain.ClientManagerXmlFileImpl",
            "items": [{
                "stringValue": "true",
                "id": "MigrationComplete8.4",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.handlers.process.exchange.execution.SecurityTokenCreator",
            "items": [{
                "listValue": [
                    "org.sourceid.wstrust.processor.oauth.BearerAccessTokenTokenProcessor",
                    "org.sourceid.wstrust.processor.jwt.JWTTokenProcessor"
                ],
                "id": "base64-required-plugins",
                "type": "LIST"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.oauth20.token.AccessGrantManagerLDAPPingDirectoryImpl",
            "items": [
                {
                    "stringValue": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING"
                },
                {
                    "stringValue": "ou=grants,dc=example,dc=com",
                    "id": "SearchBase",
                    "type": "STRING"
                }
            ],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.domain.mgmt.AdminUserManager",
            "items": [{
                "stringValue": "true",
                "id": "isEaRoleUpdated",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.domain.mgmt.impl.PartnerCertMigrator",
            "items": [{
                "stringValue": "true",
                "id": "partner.cert.migration.complete",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.domain.mgmt.impl.TrackedHttpParamManagerImpl",
            "items": [{
                "listValue": [],
                "id": "AllowedTrackedParams",
                "type": "LIST"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.metadata.partner.impl.MetadataDirectoryHybridDbImpl",
            "items": [{
                "stringValue": "true",
                "id": "MigrationComplete8.4",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.service.impl.AccountLinkingServiceLDAPImpl",
            "items": [
                {
                    "stringValue": "description",
                    "id": "AccountLinkDataAttribute",
                    "type": "STRING"
                },
                {
                    "stringValue": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING"
                },
                {
                    "stringValue": "ou=identities,dc=example,dc=com",
                    "id": "UserSearchBase",
                    "type": "STRING"
                },
                {
                    "stringValue": "mail",
                    "id": "UsernameAttribute",
                    "type": "STRING"
                }
            ],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.service.impl.PseudonymServiceSha1Impl",
            "items": [{
                "stringValue": "77+977+9bu+/vQ==",
                "id": "entropy",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "itemIds": ["EmptySessionReplayRetentionSecs"],
            "operationType": "DELETE",
            "subResource": "org.sourceid.saml20.service.session.StoredSessionServiceImpl",
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.saml20.service.session.data.impl.SessionStorageManagerLdapImpl",
            "items": [
                {
                    "stringValue": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                    "id": "PingFederateDSJNDIName",
                    "type": "STRING"
                },
                {
                    "stringValue": "ou=sessions,dc=example,dc=com",
                    "id": "SearchBase",
                    "type": "STRING"
                }
            ],
            "resourceType": "/configStore"
        },
        {
            "itemIds": [
                "browser-id-cookie-httponly-flag",
                "browser-id-cookie-secure-flag"
            ],
            "operationType": "DELETE",
            "subResource": "org.sourceid.servlet.filter.SimultaneousAuthnRequestCheckingFilter",
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "org.sourceid.util.license.Data",
            "items": [{
                "stringValue": "1549584000000",
                "id": "4961444dd0f96066cc3c2dd1c0ce24962e5e415ccea2e06a2cde455fa8633d7b",
                "type": "STRING"
            }],
            "resourceType": "/configStore"
        },
        {
            "itemIds": ["AddApplicationUrl"],
            "operationType": "DELETE",
            "subResource": "p1-admin-service-config",
            "resourceType": "/configStore"
        },
        {
            "itemIds": ["cookie-format"],
            "operationType": "DELETE",
            "subResource": "persistent-session-cookie-config",
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "subResource": "response-header-admin-config",
            "items": [{
                "mapValue": {
                    "include-patterns": "*",
                    "value": "DENY"
                },
                "id": "X-Frame-Options",
                "type": "MAP"
            }],
            "resourceType": "/configStore"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "accepted": true,
                "licenseAgreementUrl": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/license-agreement"
            }],
            "resourceType": "/license/agreement"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "fileData": "${certificates_ca_items_50z1hm968rdu2irr31i5ridbh_50z1hm968rdu2irr31i5ridbh_fileData}",
                "id": "50z1hm968rdu2irr31i5ridbh"
            }],
            "resourceType": "/certificates/ca"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "password": "${keyPairs_sslServer_items_sslservercert_sslservercert_password}",
                "fileData": "${keyPairs_sslServer_items_sslservercert_sslservercert_fileData}",
                "id": "sslservercert"
            }],
            "resourceType": "/keyPairs/sslServer"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "activeRuntimeServerCerts": [{
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/sslServer/sslservercert",
                    "id": "sslservercert"
                }],
                "activeAdminConsoleCerts": [{
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/sslServer/sslservercert",
                    "id": "sslservercert"
                }],
                "adminConsoleCertRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/sslServer/sslservercert",
                    "id": "sslservercert"
                },
                "runtimeServerCertRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/sslServer/sslservercert",
                    "id": "sslservercert"
                }
            }],
            "resourceType": "/keyPairs/sslServer/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "password": "${keyPairs_signing_items_devsigningcert_devsigningcert_password}",
                "fileData": "${keyPairs_signing_items_devsigningcert_devsigningcert_fileData}",
                "id": "devsigningcert"
            },
            {
                "password": "Nrb8f2tuFDkP22z5",
                "fileData": "MIIKJQIBAzCCCd4GCSqGSIb3DQEHAaCCCc8EggnLMIIJxzCCBa4GCSqGSIb3DQEHAaCCBZ8EggWbMIIFlzCCBZMGCyqGSIb3DQEMCgECoIIFQDCCBTwwZgYJKoZIhvcNAQUNMFkwOAYJKoZIhvcNAQUMMCsEFLTYXInOh+VBUNfbKftcGRDN3uIAAgInEAIBIDAMBggqhkiG9w0CCQUAMB0GCWCGSAFlAwQBKgQQoIAQJDc6D/NJC0pIC734nASCBNDswbZ8lOQS/URD5RTVphytAusjSBLMHI0YZup+U9m8s5su+tsguwXQ/tZhFhwVeSujRIf0BDuHvW5FfOUc9QTBEICXlTd0UebJYqvwjmy/GGfzL1B0cqPVxB25Fl3mbBiTN5230JV1FciK4L/z4C1Lt34KrvtAULnuF8EBm8op0oJ678Z+pkMCTEVnPe9C6aFNYbtNz5uXgkdygUGY5NC+RiYpBRwK9FJ5FdxWBxzZ9wFtVJ2qmdenl0/px5AcV4tNv8AiZWznggoeEKmjlYyYh4WK6PUN5LUjsaXDBLAzhf6mzEFi2I7gPKD1vN+hl+Zx9+b4w2vBArRnUt95ilYMFV8cJ465RzFK7St58aQ+ETS3OtYHY1MywExXcBMJOARt+nmSS9c2bkv9A12TofDhWgRsNErgdyxrQKOIglhNvGMX7UtER+gHH4c06OWaPZNd2XhU1SDNLtWLdQkkDgYSNq4jZDx4K68Od44sAXTK7WAdKX+tJPw66VOeHu0F7gegK0X51au3jZidTQX7C6q2g+/Mxc55xe3u7Og9YOwtY8CpvO/OHKXqFsLVKJbUXIEXBQAvWiX9qJmFc65AYNbwdiE5iLgJM2rGqeEqsJQ07nwqym8gh3z2vnvSVZmsprglYxIqmkFCQUOeRKHq3uz7uUhkq5bOo+z1lMYE+n4Rt3SlYPV/mNHjDtEo9wmfmpz8J5PXAD60wk1R64ny9msvcaQzFkyTkIer3dYiYBqge0lrxXrirMRcjVGaJIJuqctSUUdsVEp5MtUl4eATZbVKe/Si9pLh55j/gT4cirg+gIbMjQZ5wbPQXVjq/Odoc12drAOA9FQkJM/IaZyGgkn/bj2M2wKGBtWD+t13dtwyRZE1SmID0CcjfKaPv9msyZ6rXBwhNlLqVIAERnmUa4rCDs+z0OEbUdZj9yHVGXtp+RGCxXbPYNXVMMb2sFwrLk+2qc0aTDDg1GgmGedDhuSo05W3d+JLEvRl2tO2+IZ8vuxy/M5myotYH89IAyTbN/9v0vm6ingrvqLhVHgjpsmmdEuDT/brizR1QZSFYDNnIQnv9mlwXpzp7wzByJM5ZwfiH/vw3QfOpNoOiaFNgcnOgalKKiV8LkyNQMZBkANLrDsknq2plXatf+7XkZlTVgBk20dk8HNluP4hMdV9q6Q7H9yzaBy6StKUUyt6AI1OMBUXDsrFaJGnpG9H3Qd3wCgjMNJNSUTIbT1JOjWpY8wgWln7Z4tJUpCkcUeZnaUivWPjZlm2AfgzIKiGDOTYlyjs6WfArBsKPfrSnYjVIbCylsD8oRyYViv5lhoQMjUohKQNCv4y6MRKMiAbGM4Tq/amkbEqG6YEV0bC/1LegedYapR/HBkej5vzG0oSiWFqZbcAqFSjUs5IV2k9hm3iw4+GlaLX1OkjMvYdSWKCuXeQoprE8jZH8YxOqZHCNP1nYAyWsfqqbXL+fyrN6d6cdynFUnOor36tzXaMJ2X2PlXnC518oy/XPRqWl2lHBV2Z5mGHpyLqXAzLYjhQyoOJw5RuTNTwgO7ulfoFQQ+aa+jW6bORemxY7wQpXRj9//2C5oNHYlBOVYPb2IJ4n3U38D0Ffw39clFLJUwgv6kFDCHTP29ou4QgL5ew+JRX7iX8lTFAMBsGCSqGSIb3DQEJFDEOHgwAcABmAHQAZQBzAHQwIQYJKoZIhvcNAQkVMRQEElRpbWUgMTY0MjUwNzMyNzA3MDCCBBEGCSqGSIb3DQEHBqCCBAIwggP+AgEAMIID9wYJKoZIhvcNAQcBMGYGCSqGSIb3DQEFDTBZMDgGCSqGSIb3DQEFDDArBBTxh3kWCOt4OyIDKV05XtwzPzpjwwICJxACASAwDAYIKoZIhvcNAgkFADAdBglghkgBZQMEASoEEJBN6xoVIJsGISsU/CBoqveAggOA1BxCYFZG+JjKBvdVw+CoFRDNy6FWNSWzK9Ux3FvatY1mA5ga7dD9TpdEXCb++RNp/sZs5l13okOjLXNYX0Lo3yGNhI9dSdnnhe0Vxkd+DVua2SBBZkxVSt/+UTOOcgcDp5JTHNWZb0FLgZLGhU/bn7H/vAEehqdB1eyoW5Q7/7h8+X8CZvVb2dGEZ3/MDqyFFYxFbDK+EpWIpgiKxISfeRMxU7cJW0RxK6JPXMOy12TwZ19hYa8uygXpgFir9eyjPfRQRleR86JXrbdFSp/Kb7XT7xTwgdZ0FSs9PUstCQwNvDfxN9FA9dA4xbwhlLVJwzTQouS4NPrY65Cbvf4R1aQiYFIhM9lki9IZXXvIH8gm8TYunOr9kNCidY5DSX8y4vSfyIjyW4Ui3Ectn7svYLcRLT8RtYkjGn1xAOUIFrBNTXaegdYKgua8LoNgnS83GQISGL2vAnuryR3bPUF18Tuk6LHyEHPlY7jdLYMZGUB2O1Kzx5BJgqSucNbxnLOz2eHEFpfeJ7pGhqTt2bKgfDNFZN4u7Fk9deobZZmFLrt0GwV4V3VIesPyKIz7VNPKJlNQMcqh9MqCoutdOOHuhNDVQE21T2GBdiKJNGjZpWg3pOPrl65tSf/Lt8Y8OGFRPudyS0FYmG8FNTEoQf7jpixXFtgF5gYfI9zhurwxVBqc/tWvfUF1P0tbvwWSQ+u4V9FnDGonFYTkCogTWc0yrDGhhC+WwH101gDtsDHYpCLOSTb/lnluWbANC/JzSqFEt0oTsY+Ma+YA3bLgpNaqweawY1OA5Hf7Q9mv6rAiJ4YunYhc7oqAUs7R6vLW5E/xVxLpuCykUbQeDz7ZKPGoqpX85ULjyC+LsiNGrkQNVFJe4PLHBG3p11vWc5wYtB1G7X6vX6N4Gei1fjvZxSFhrDdMQopjLPdGay5xiIqyl+aIk4CnxgwxRlin5U7SZTyzTCJnuIO61DdLS2k53w1AU8FBwz55WtKB9SF83ZYMuyENZDGJmlq6GZiFUq6Jf5L5c//OfYHN3JmP4xK7v1Qy53p1KM0QDLnlymvgxgZLEspMsbw5dEmV/0fw2sbwF0TrNJdlitqQ7+OloTkvZPvyku479Y8BWFwSu58xKNVvHdMoWwUqpj9wsZsCrBz5ZuN+KHn3SvdZZz6ZJHzkrYNCEIvQbKlUB7c7aqxhz8l3gzAwPjAhMAkGBSsOAwIaBQAEFINqFJX30LSZUuEWahMpi3TI7lpPBBR9VxiZzyisiP6KMwKRacdY6K5ycgIDAYag",
                "id": "pf-export-test"
            },
            {
                "password": "Nrb8f2tuFDkP22z5",
                "fileData": "-----BEGIN ENCRYPTED PRIVATE KEY-----\nMIIE6jAcBgoqhkiG9w0BDAEEMA4ECBwUbU5GrXIZAgIFjASCBMht2kJEZTI8JEN7\n5cGK8VVXAhlDpllQ7VYbR8vyzGOxN7nK5u32+EKgOSUPF/GHSIaJmAWTIiAiH49r\nNtpWUai3VkyAvEJyNE321/nqS5s3VBTHXdocytKDYBX2Vm6JaDFPXrts6sX724u0\nmWse3Z8CSxbLRcFtU7Yi2mmUY0EzLiQvbcJGzJxKJE7P8yavHjdSUvb+bWJNpPIc\nUq8mHc9NnRr9DrXbzl1kzhaycHBtBXRo+ekYGcCO18+MBEu2Ncwfk0MpAs1j4iM5\nZlQsqKuMRLk2dWdgvqQzgp744KvqiWSP6rup0MmID3ST5uC4SHKjw6tFduc4UVAN\nWEkrR8rz1GOvcDg3NZ5eiaB092TRoxkdmtu3tp+Jg1U67lJpbR9Wj9+2P5ZktjO5\nSjNgOuvMDxPmP/T+iC1mAVV9oZdAjEnflZ6vKJtkkMaA5KAwRgs1evwopDN6aYjc\nAoPxdPnuu2wZ2bSOkEgDJncM7GM1TW/zUWVT95mzkqpi+m8uu81YlNp1itXdsSJ0\nhXGaAqkQFg+UhRMngaT2jpK77bj+hET2h+jKOf/1NzCOtdZb4ye9ospe4u4TpQMB\n+C5VOFhQcEjW6qsChH4YXdWMPzAb00H0YDKHmptHYNr4s5A8o6vLwI574mFYBkrW\nNk+pBDIszUC+PMfZzglM21RIrgwHXmuVVbe3paBxBjIkZeyk9+5AFpMDvofPEzSU\nH13KzZL0a6Mhw3KRNEmNgB6jNInTGeZb+0IJBSKN2AJ4/rEBMFPXRo4qdgv1/+DX\nLhS9ynNwnlFdl2VtbnKYUnMGmxwisxEPUBAwc4v7qFe/glKtfuuwZXemKoQ2azsx\nr7BaJRDrAfScEgOfkt0K1FT0Fi+rQ3CPiYRa88C9wkuaMT8VVdEk7yhz3LiaqiBo\nE+66kuYQqDyCXm0bKES23xrIDRAFw1vml6IPopmRwaK+kvslBD2kJb4QogXXBZPl\nQBP7OTadYp6BkAvBS+hCLuwxdMW60HQ+4HFmO088JJuhbhBLhmXLX1y9tHRl8HMM\n51Xw8L3ksqxA+m4z1D+Se+TBPp74IIHW5Afb+hNWITBOILqAF7OqTnpBgKh5rVX4\ne+1D9Pg9supPeHG3Suhgws9Qa7lWm9Ld+M8yR1Xdp4cZ7AyYouLz0GO6kDip0I+x\nd2beF+ryPFNOav7bq8aJR2Fe2agpjpDghoKhL/sQIJ9O2H/LklgNCAhg1YsI9nc3\nVqW/l+nVqEdD7XWb0JgMeAlXLvgwgbzsj/WQxX7wZq2ZuL6IUPWP9IIa7rqjD/6V\nkomzGo0RssvHZ3FHq9TeOHypvh37ccB3WAByUM77GslLHAYA2H+6kS1XJzLHRAnm\noIV2f2OrggNRFYyhsDpO63MworNIVim291iCePTB7OfpgC6JsfUWTJ0s5mKWgj/U\nARNdoeDUcFsWE8RE/NFv0xB8dDTS717nGc8J7tsikmw4YWJvlHke5MG2Ccgbk/Wp\n6nJvkYcyyHIqsLXvCfr9CWkGAy5cWwjVQCXLbooOAqvNUKg1nh1k7Z+iDOVXY84y\nQ4YfowSNOpGfG2O1HSWBM6D4oyXLYb+NqEX9KVCj4eVW62fNW2TOFXy9zl+NuwFv\nxogUVUWtwnw9hJDc19A=\n-----END ENCRYPTED PRIVATE KEY-----\n-----BEGIN CERTIFICATE-----\nMIICmjCCAYKgAwIBAgIEYeWSzTANBgkqhkiG9w0BAQsFADAPMQ0wCwYDVQQDDAR0\nZXN0MB4XDTIyMDExNzE2MDIxM1oXDTIzMDExNzE2MDIxM1owDzENMAsGA1UEAwwE\ndGVzdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMHV/Fmf6fX4zMXL\nehQU3xGMoYRdrKTpd+1qAKL6YdGQ+GnTFk8+Qv/Z4oNAK4KbQ7hn7zCsS8BmntLm\nRZlqyuY/U08M7EOLeGGaMpatxNOpoSN1AdbhYzrvN0XIsiDy5pw/3tNqZKHnhSQ4\ngHqphMk+7qM7S0DsfLH7cS29kYmc48MbzQ9cF9C6mKCv2ZKC8q7WZiYHeWsN7g7/\nvi8wsbWBOnqrSwTriQm7Z08FQhTEz5RFRId0+B8P7mjFsj84mLzU/yat31foojFO\nDSRsbF4nUk3W8Nsxsyru7tzRR/ItOUnC10vocAWk0aKDRRZB74aHoSzCm6/yOBWw\n36HH1HUCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEALAKSGSlmYv+7cxS3U//gULPm\nBTbMGnLcYCxr6G7eOwG3i6awZ+UsJDx/oMB3qClUoPfPAmKJv4znwSnqbA3+yTHL\n7Vvqs1mM6w2Z6uW4MdFam1f8pKPHnhLKn11AlymREj4mzG+WKcszOPtlQeOHE5sY\nRFVl2RGoGWN8UBGL97PJTklCLs3wtpnUkW/O7YYyPTCy0t8NmGRl726NWj+nKSZW\n87+Ufgmsp12RA0e03Bxtjk0ER3kNwnuap5Fk5MYGmZVfpW3blqPfogA0SvFBz35U\ntbdpXuNv4WmRKWIvod0q/O7fHke0YNLtGTow+2iJ9o65Zloz4Dj7lFWaFSZvZw==\n-----END CERTIFICATE-----\n",
                "format":"PEM",
                "id": "pf-export-pem"
            }],
            "resourceType": "/keyPairs/signing"
        },
        {
            "operationType": "SAVE",
            "items": [{"staticJwksEnabled": false}],
            "resourceType": "/keyPairs/oauthOpenIdConnect"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "type": "JDBC",
                    "id": "JDBC-4669059DA7EDB196F12EBB5B9C9644C8887CF22F",
                    "maskAttributeValues": false,
                    "connectionUrl": "jdbc:postgresql://pingfederate-dev-aurora-postgresql.cluster-chnkqdqxxpgo.eu-west-2.rds.amazonaws.com,pingfederate-dev-aurora-postgresql.cluster-ro-chnkqdqxxpgo.eu-west-2.rds.amazonaws.com/auth_server?targetServerType=any",
                    "driverClass": "org.postgresql.Driver",
                    "userName": "postgres",
                    "encryptedPassword": "eyJhbGciOiJkaXIiLCJlbmMiOiJBMTI4Q0JDLUhTMjU2Iiwia2lkIjoiRW1JY1UxOVdueSIsInZlcnNpb24iOiIxMC4zLjMuMCJ9..U-grI6gxzYldMB9zxkD4zw.32v13pCzbj4abNsdT9lQHw.W2zoQSZA8gJ4QRpN7NK7zA",
                    "validateConnectionSql": "SELECT 1",
                    "allowMultiValueAttributes": true,
                    "name": "pf-postgres",
                    "connectionUrlTags": [
                        {
                            "connectionUrl": "jdbc:postgresql://pingfederate-dev-aurora-postgresql.cluster-chnkqdqxxpgo.eu-west-2.rds.amazonaws.com,pingfederate-dev-aurora-postgresql.cluster-ro-chnkqdqxxpgo.eu-west-2.rds.amazonaws.com/auth_server?targetServerType=any",
                            "defaultSource": true
                        }
                    ],
                    "minPoolSize": 75,
                    "maxPoolSize": 150,
                    "blockingTimeout": 5000,
                    "idleTimeout": 5
                },
                {
                    "hostnamesTags": [{
                        "defaultSource": true,
                        "hostnames": ["${PD_ENGINE_PRIVATE_HOSTNAME}:${PD_ENGINE_PRIVATE_PORT_LDAP}"]
                    }],
                    "timeBetweenEvictions": 60000,
                    "binaryAttributes": [],
                    "ldapType": "PING_DIRECTORY",
                    "type": "LDAP",
                    "password": "${dataStores_items_LDAP_D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3_LDAP_D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3_password}",
                    "minConnections": 10,
                    "createIfNecessary": true,
                    "id": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                    "ldapDnsSrvPrefix": "_ldap._tcp",
                    "connectionTimeout": 3000,
                    "maxConnections": 100,
                    "ldapsDnsSrvPrefix": "_ldaps._tcp",
                    "useDnsSrvRecords": false,
                    "bindAnonymously": false,
                    "maxWait": -1,
                    "verifyHost": true,
                    "hostnames": ["${PD_ENGINE_PRIVATE_HOSTNAME}:${PD_ENGINE_PRIVATE_PORT_LDAP}"],
                    "dnsTtl": 60000,
                    "useSsl": false,
                    "maskAttributeValues": false,
                    "testOnBorrow": false,
                    "testOnReturn": false,
                    "readTimeout": 3000,
                    "name": "pingdirectory",
                    "userDN": "cn=pingfederate"
                },
                {
                    "maskAttributeValues": false,
                    "connectionUrlTags": [{
                        "connectionUrl": "jdbc:hsqldb:${pf.server.data.dir}${/}hypersonic${/}ProvisionerDefaultDB;hsqldb.lock_file=false",
                        "defaultSource": true
                    }],
                    "password": "${dataStores_items_ProvisionerDS_ProvisionerDS_password}",
                    "allowMultiValueAttributes": false,
                    "driverClass": "org.hsqldb.jdbcDriver",
                    "name": "ProvisionerDS (sa)",
                    "connectionUrl": "jdbc:hsqldb:${pf.server.data.dir}${/}hypersonic${/}ProvisionerDefaultDB;hsqldb.lock_file=false",
                    "id": "ProvisionerDS",
                    "type": "JDBC",
                    "userName": "sa"
                },
                {
                    "maskAttributeValues": false,
                    "configuration": {
                        "tables": [
                            {
                                "name": "Base URLs and Tags",
                                "rows": [{
                                    "defaultRow": true,
                                    "fields": [
                                        {
                                            "name": "Base URL",
                                            "value": "https://285caac4-b7b3-4a07-818c-8ff986801dfd.mock.pstmn.io"
                                        },
                                        {
                                            "name": "Tags",
                                            "value": "default"
                                        }
                                    ]
                                }]
                            },
                            {
                                "name": "HTTP Request Headers",
                                "rows": []
                            },
                            {
                                "name": "Attributes",
                                "rows": [
                                    {
                                        "defaultRow": false,
                                        "fields": [
                                            {
                                                "name": "Local Attribute",
                                                "value": "valid"
                                            },
                                            {
                                                "name": "JSON Response Attribute Path",
                                                "value": "/valid"
                                            }
                                        ]
                                    },
                                    {
                                        "defaultRow": false,
                                        "fields": [
                                            {
                                                "name": "Local Attribute",
                                                "value": "level"
                                            },
                                            {
                                                "name": "JSON Response Attribute Path",
                                                "value": "/level"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ],
                        "fields": [
                            {
                                "name": "Authentication Method",
                                "value": "None"
                            },
                            {
                                "name": "Username",
                                "value": ""
                            },
                            {
                                "name": "Password",
                                "value": ""
                            },
                            {
                                "name": "OAuth Token Endpoint",
                                "value": ""
                            },
                            {
                                "name": "OAuth Scope",
                                "value": ""
                            },
                            {
                                "name": "Client ID",
                                "value": ""
                            },
                            {
                                "name": "Client Secret",
                                "value": ""
                            },
                            {
                                "name": "Enable HTTPS Hostname Verification",
                                "value": "true"
                            },
                            {
                                "name": "Read Timeout (ms)",
                                "value": "10000"
                            },
                            {
                                "name": "Connection Timeout (ms)",
                                "value": "10000"
                            },
                            {
                                "name": "Max Payload Size (KB)",
                                "value": "1024"
                            },
                            {
                                "name": "Retry Request",
                                "value": "true"
                            },
                            {
                                "name": "Maximum Retries Limit",
                                "value": "3"
                            },
                            {
                                "name": "Retry Error Codes",
                                "value": "429"
                            },
                            {
                                "name": "Test Connection URL",
                                "value": "https://285caac4-b7b3-4a07-818c-8ff986801dfd.mock.pstmn.io/jwt-bearer-validate"
                            }
                        ]
                    },
                    "name": "JwtBearerValidator",
                    "id": "Other-C4AF65BDA32BF80D262B08CC795891D075A4264B",
                    "type": "CUSTOM",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/dataStores/descriptors/com.pingidentity.pf.datastore.other.RestDataSourceDriver",
                        "id": "com.pingidentity.pf.datastore.other.RestDataSourceDriver"
                    }
                }
            ],
            "resourceType": "/dataStores"
        },
        {
            "operationType": "SAVE",
            "items": [{}],
            "resourceType": "/notificationPublishers/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "federationInfo": {
                    "saml2EntityId": "https://${PF_ENGINE_PUBLIC_HOSTNAME}:${PF_ENGINE_PUBLIC_PORT_HTTPS}",
                    "saml1xIssuerId": "localhost:default:entityId",
                    "wsfedRealm": "",
                    "baseUrl": "https://${PF_ENGINE_PUBLIC_HOSTNAME}:${PF_ENGINE_PUBLIC_PORT_HTTPS}",
                    "saml1xSourceId": ""
                },
                "contactInfo": {},
                "rolesAndProtocols": {
                    "oauthRole": {
                        "enableOpenIdConnect": true,
                        "enableOauth": true
                    },
                    "enableIdpDiscovery": true,
                    "spRole": {
                        "enableSaml11": true,
                        "enableWsFed": true,
                        "enable": true,
                        "enableWsTrust": true,
                        "saml20Profile": {
                            "enableXASP": true,
                            "enable": true
                        },
                        "enableInboundProvisioning": true,
                        "enableOpenIDConnect": true,
                        "enableSaml10": true
                    },
                    "idpRole": {
                        "enableSaml11": true,
                        "enableWsFed": true,
                        "enable": true,
                        "enableWsTrust": true,
                        "saml20Profile": {"enable": true},
                        "enableOutboundProvisioning": true,
                        "enableSaml10": true
                    }
                },
                "notifications": {"notifyAdminUserPasswordChanges": false}
            }],
            "resourceType": "/serverSettings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "current": {
                    "keyData": "${serverSettings_systemKeys_items_current_keyData}",
                    "creationDate": "2019-01-28T03:10:17.926Z"
                },
                "pending": {
                    "keyData": "${serverSettings_systemKeys_items_pending_keyData}",
                    "creationDate": "2019-01-28T03:10:17.928Z"
                }
            }],
            "resourceType": "/serverSettings/systemKeys"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "dataStoreRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/dataStores",
                    "id": ""
                },
                "synchronizationFrequency": 60
            }],
            "resourceType": "/serverSettings/outboundProvisioning"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "password": "${administrativeAccounts_items_Administrator_password}",
                "roles": [
                    "CRYPTO_ADMINISTRATOR",
                    "ADMINISTRATOR",
                    "EXPRESSION_ADMINISTRATOR",
                    "USER_ADMINISTRATOR"
                ],
                "auditor": false,
                "description": "Initial administrator user.",
                "active": true,
                "username": "Administrator"
            }],
            "resourceType": "/administrativeAccounts"
        },
        {
            "operationType": "SAVE",
            "items": [{"crlSettings": {
                "nextRetryMinsWhenNextUpdateInPast": 60,
                "verifyCrlSignature": true,
                "nextRetryMinsWhenResolveFailed": 1440,
                "treatNonRetrievableCrlAsRevoked": false
            }}],
            "resourceType": "/certificates/revocation/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{"virtualHostNames": ["pingfederate"]}],
            "resourceType": "/virtualHostNames"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "redirectValidationLocalSettings": {
                    "enableTargetResourceValidationForSLO": true,
                    "enableInErrorResourceValidation": true,
                    "whiteList": [],
                    "enableTargetResourceValidationForSSO": true,
                    "enableTargetResourceValidationForIdpDiscovery": true
                },
                "redirectValidationPartnerSettings": {"enableWreplyValidationSLO": true}
            }],
            "resourceType": "/redirectValidation"
        },
        {
            "operationType": "SAVE",
            "items": [{"proxyTerminatesHttpsConns": false}],
            "resourceType": "/incomingProxySettings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "cacheDuration": 1440,
                "reloadDelay": 1440
            }],
            "resourceType": "/protocolMetadata/lifetimeSettings"
        },
        {
            "operationType": "SAVE",
            "items": [{}],
            "resourceType": "/protocolMetadata/signingSettings"
        },
        {
            "operationType": "SAVE",
            "items": [{}],
            "resourceType": "/serviceAuthentication"
        },
        {
            "operationType": "SAVE",
            "items": [
            {
                    "id": "QspymyEwcU7EQAOm",
                    "name": "LoadTestContract",
                    "coreAttributes": [
                        {
                            "name": "subject"
                        }
                    ],
                    "extendedAttributes": [
                        {
                            "name": "jwt"
                        },
                        {
                            "name": "authorisation_id"
                        },
                        {
                            "name": "resources"
                        },
                        {
                            "name": "extra_data_test"
                        },
                        {
                            "name": "extra_data_backpack"
                        }
                    ]
                },
            {
                "name": "simplecontract",
                "id": "Zxp6N6W5PH9onACT",
                "coreAttributes": [{"name": "subject"}],
                "extendedAttributes": [{"name": "mail"}]
            },
            {
                "name": "mockcontract",
                "id": "qzMQD2kM2Lr0TiDs",
                "coreAttributes": [{"name": "subject"}],
                "extendedAttributes": [{"name": "cid"}]
            }],
            "resourceType": "/authenticationPolicyContracts"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "configuration": {
                        "tables": [{
                            "name": "Authentication Error Overrides",
                            "rows": []
                        }],
                        "fields": [
                            {
                                "name": "LDAP Datastore",
                                "value": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3"
                            },
                            {
                                "name": "Search Base",
                                "value": "dc=example,dc=com"
                            },
                            {
                                "name": "Search Filter",
                                "value": "(&(objectClass=person)(|(mail=${username})(cn=${username})(uid=${username})))"
                            },
                            {
                                "name": "Scope of Search",
                                "value": "Subtree"
                            },
                            {
                                "name": "Case-Sensitive Matching",
                                "value": "false"
                            },
                            {
                                "name": "Display Name Attribute",
                                "value": "displayName"
                            },
                            {
                                "name": "Mail Attribute",
                                "value": "mail"
                            },
                            {
                                "name": "SMS Attribute",
                                "value": ""
                            },
                            {
                                "name": "PingID Username Attribute",
                                "value": ""
                            },
                            {
                                "name": "Mail Search Filter",
                                "value": ""
                            },
                            {
                                "name": "Username Attribute",
                                "value": ""
                            },
                            {
                                "name": "Mail Verified Attribute",
                                "value": ""
                            }
                        ]
                    },
                    "name": "pingdirectory",
                    "id": "pingdirectory",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/passwordCredentialValidators/descriptors/org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator",
                        "id": "org.sourceid.saml20.domain.LDAPUsernamePasswordCredentialValidator"
                    },
                    "attributeContract": {
                        "coreAttributes": [
                            {"name": "mail"},
                            {"name": "givenName"},
                            {"name": "DN"},
                            {"name": "username"}
                        ],
                        "extendedAttributes": [{"name": "entryUUID"}]
                    }
                },
                {
                    "configuration": {
                        "tables": [{
                            "name": "Users",
                            "rows": [{
                                "defaultRow": false,
                                "fields": [
                                    {
                                        "name": "Username",
                                        "value": "joe"
                                    },
                                    {
                                        "name": "Password",
                                        "value": "${passwordCredentialValidators_items_simple_configuration_tables_rows_fields_Password_value}"
                                    },
                                    {
                                        "name": "Confirm Password",
                                        "value": "${passwordCredentialValidators_items_simple_configuration_tables_rows_fields_Confirm_Password_value}"
                                    },
                                    {
                                        "name": "Relax Password Requirements",
                                        "value": "true"
                                    }
                                ]
                            }]
                        }],
                        "fields": []
                    },
                    "name": "simple",
                    "id": "simple",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/passwordCredentialValidators/descriptors/org.sourceid.saml20.domain.SimpleUsernamePasswordCredentialValidator",
                        "id": "org.sourceid.saml20.domain.SimpleUsernamePasswordCredentialValidator"
                    },
                    "attributeContract": {"coreAttributes": [{"name": "username"}]}
                }
            ],
            "resourceType": "/passwordCredentialValidators"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "registrationConfig": {
                    "thisIsMyDeviceEnabled": false,
                    "templateName": "local.identity.registration.html",
                    "captchaEnabled": false,
                    "createAuthnSessionAfterRegistration": true
                },
                "registrationEnabled": true,
                "apcId": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/Zxp6N6W5PH9onACT",
                    "id": "Zxp6N6W5PH9onACT"
                },
                "name": "pingdirectory",
                "authSources": [],
                "id": "RBSQIwi5KWYN9ZGK",
                "fieldConfig": {
                    "stripSpaceFromUniqueField": false,
                    "fields": [
                        {
                            "profilePageField": true,
                            "attributes": {
                                "Read-Only": false,
                                "Required": true,
                                "Unique ID Field": true,
                                "Mask Log Values": false
                            },
                            "id": "mail",
                            "label": "Email address",
                            "type": "EMAIL",
                            "registrationPageField": true
                        },
                        {
                            "profilePageField": true,
                            "defaultValue": "",
                            "attributes": {
                                "Read-Only": false,
                                "Required": true,
                                "Unique ID Field": false,
                                "Mask Log Values": false
                            },
                            "id": "cn",
                            "label": "First Name",
                            "type": "TEXT",
                            "registrationPageField": true
                        },
                        {
                            "profilePageField": true,
                            "defaultValue": "",
                            "attributes": {
                                "Read-Only": false,
                                "Required": true,
                                "Unique ID Field": false,
                                "Mask Log Values": false
                            },
                            "id": "sn",
                            "label": "Last Name",
                            "type": "TEXT",
                            "registrationPageField": true
                        },
                        {
                            "profilePageField": false,
                            "attributes": {
                                "Unique ID Field": false,
                                "Mask Log Values": false
                            },
                            "id": "entryUUID",
                            "label": "entryUUID",
                            "type": "HIDDEN",
                            "registrationPageField": false
                        },
                        {
                            "profilePageField": false,
                            "attributes": {
                                "Unique ID Field": false,
                                "Mask Log Values": false
                            },
                            "id": "uid",
                            "label": "uid",
                            "type": "HIDDEN",
                            "registrationPageField": true
                        }
                    ]
                },
                "profileEnabled": true,
                "authSourceUpdatePolicy": {
                    "updateInterval": 0,
                    "retainAttributes": false,
                    "updateAttributes": false,
                    "storeAttributes": false
                },
                "profileConfig": {
                    "templateName": "local.identity.profile.html",
                    "deleteIdentityEnabled": true
                },
                "emailVerificationConfig": {"emailVerificationEnabled": false},
                "dataStoreConfig": {
                    "createPattern": "uid=${mail}",
                    "objectClass": "inetOrgPerson",
                    "dataStoreRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/dataStores/LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3",
                        "id": "LDAP-D803C87FAB2ADFB4B0A947B64BA6F0C6093A5CA3"
                    },
                    "type": "LDAP",
                    "baseDn": "ou=people,dc=example,dc=com",
                    "dataStoreMapping": {
                        "entryUUID": {
                            "metadata": {},
                            "name": "entryUUID",
                            "type": "LDAP"
                        },
                        "uid": {
                            "metadata": {},
                            "name": "uid",
                            "type": "LDAP"
                        },
                        "mail": {
                            "metadata": {},
                            "name": "mail",
                            "type": "LDAP"
                        },
                        "cn": {
                            "metadata": {},
                            "name": "cn",
                            "type": "LDAP"
                        },
                        "sn": {
                            "metadata": {},
                            "name": "sn",
                            "type": "LDAP"
                        }
                    }
                }
            }],
            "resourceType": "/localIdentity/identityProfiles"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "id": "OpaqueToken",
                    "name": "Opaque Token",
                    "pluginDescriptorRef": {
                        "id": "org.sourceid.oauth20.token.plugin.impl.ReferenceBearerAccessTokenManagementPlugin",
                        "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/oauth/accessTokenManagers/descriptors/org.sourceid.oauth20.token.plugin.impl.ReferenceBearerAccessTokenManagementPlugin"
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Token Length",
                                "value": "28"
                            },
                            {
                                "name": "Token Lifetime",
                                "value": "5"
                            },
                            {
                                "name": "Lifetime Extension Policy",
                                "value": "NONE"
                            },
                            {
                                "name": "Maximum Token Lifetime",
                                "value": ""
                            },
                            {
                                "name": "Lifetime Extension Threshold Percentage",
                                "value": "30"
                            },
                            {
                                "name": "Mode for Synchronous RPC",
                                "value": "3"
                            },
                            {
                                "name": "RPC Timeout",
                                "value": "500"
                            },
                            {
                                "name": "Expand Scope Groups",
                                "value": "false"
                            }
                        ]
                    },
                    "attributeContract": {
                        "coreAttributes": [],
                        "extendedAttributes": [
                            {
                                "name": "subject"
                            },
                            {
                                "name": "jwt"
                            },
                            {
                                "name": "authorisation_id"
                            },
                            {
                                "name": "resources"
                            },
                            {
                                "name": "extra_data_test"
                            },
                            {
                                "name": "extra_data_backpack"
                            }
                        ]
                    },
                    "selectionSettings": {
                        "resourceUris": []
                    },
                    "accessControlSettings": {
                        "restrictClients": false,
                        "allowedClients": []
                    },
                    "sessionValidationSettings": {
                        "checkValidAuthnSession": false,
                        "checkSessionRevocationStatus": false,
                        "updateAuthnSessionActivity": false,
                        "includeSessionId": false
                    }
                },
            {
                "sessionValidationSettings": {
                    "updateAuthnSessionActivity": false,
                    "checkValidAuthnSession": false,
                    "includeSessionId": false,
                    "checkSessionRevocationStatus": false
                },
                "configuration": {
                    "tables": [
                        {
                            "name": "Symmetric Keys",
                            "rows": []
                        },
                        {
                            "name": "Certificates",
                            "rows": [{
                                "defaultRow": false,
                                "fields": [
                                    {
                                        "name": "Key ID",
                                        "value": "k1"
                                    },
                                    {
                                        "name": "Certificate",
                                        "value": "devsigningcert"
                                    }
                                ]
                            }]
                        }
                    ],
                    "fields": [
                        {
                            "name": "Token Lifetime",
                            "value": "120"
                        },
                        {
                            "name": "Use Centralized Signing Key",
                            "value": "false"
                        },
                        {
                            "name": "JWS Algorithm",
                            "value": "RS256"
                        },
                        {
                            "name": "Active Symmetric Key ID",
                            "value": ""
                        },
                        {
                            "name": "Active Signing Certificate Key ID",
                            "value": "k1"
                        },
                        {
                            "name": "JWE Algorithm",
                            "value": ""
                        },
                        {
                            "name": "JWE Content Encryption Algorithm",
                            "value": ""
                        },
                        {
                            "name": "Active Symmetric Encryption Key ID",
                            "value": ""
                        },
                        {
                            "name": "Asymmetric Encryption Key",
                            "value": ""
                        },
                        {
                            "name": "Asymmetric Encryption JWKS URL",
                            "value": ""
                        },
                        {
                            "name": "Include Key ID Header Parameter",
                            "value": "true"
                        },
                        {
                            "name": "Include X.509 Thumbprint Header Parameter",
                            "value": "false"
                        },
                        {
                            "name": "Default JWKS URL Cache Duration",
                            "value": "720"
                        },
                        {
                            "name": "Include JWE Key ID Header Parameter",
                            "value": "true"
                        },
                        {
                            "name": "Include JWE X.509 Thumbprint Header Parameter",
                            "value": "false"
                        },
                        {
                            "name": "Client ID Claim Name",
                            "value": "client_id_name"
                        },
                        {
                            "name": "Scope Claim Name",
                            "value": "scope"
                        },
                        {
                            "name": "Space Delimit Scope Values",
                            "value": "false"
                        },
                        {
                            "name": "Issuer Claim Value",
                            "value": ""
                        },
                        {
                            "name": "Audience Claim Value",
                            "value": ""
                        },
                        {
                            "name": "JWT ID Claim Length",
                            "value": "0"
                        },
                        {
                            "name": "Access Grant GUID Claim Name",
                            "value": "agid"
                        },
                        {
                            "name": "JWKS Endpoint Path",
                            "value": ""
                        },
                        {
                            "name": "JWKS Endpoint Cache Duration",
                            "value": "720"
                        },
                        {
                            "name": "Publish Key ID X.509 URL",
                            "value": "false"
                        },
                        {
                            "name": "Publish Thumbprint X.509 URL",
                            "value": "false"
                        }
                    ]
                },
                "name": "JSON Web Tokens",
                "id": "jwt",
                "pluginDescriptorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/descriptors/com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin",
                    "id": "com.pingidentity.pf.access.token.management.plugins.JwtBearerAccessTokenManagementPlugin"
                },
                "accessControlSettings": {
                    "restrictClients": false,
                    "allowedClients": []
                },
                "attributeContract": {
                    "coreAttributes": [],
                    "extendedAttributes": [
                        {"name": "sub"},
                        {"name": "Username"},
                        {"name": "OrgName"},
                        {"name": "cid"}
                    ]
                },
                "selectionSettings": {"resourceUris": []}
            }],
            "resourceType": "/oauth/accessTokenManagers"
        },
        {
            "operationType": "SAVE",
            "items": [{"defaultAccessTokenManagerRef": {
                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                "id": "jwt"
            }}],
            "resourceType": "/oauth/accessTokenManagers/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "forceTcp": false,
                "debugLogOutput": false
            }],
            "resourceType": "/kerberos/realms/settings"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {
                            "customerID": {
                                "source": {"type": "ADAPTER"},
                                "value": "customerID"
                            },
                            "userID": {
                                "source": {"type": "ADAPTER"},
                                "value": "userID"
                            }
                        },
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Mock UID",
                                "value": "Q8hg93dU"
                            },
                            {
                                "name": "Mock CID",
                                "value": "F60800663"
                            }
                        ]
                    },
                    "name": "Dummy Adapter",
                    "id": "DummyAdapterTest",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.DummyAdapter",
                        "id": "uk.co.santander.auth.pf.plugins.mock.DummyAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "uniqueUserKeyAttribute": "userID",
                        "coreAttributes": [
                            {
                                "masked": false,
                                "name": "customerID",
                                "pseudonym": false
                            },
                            {
                                "masked": false,
                                "name": "userID",
                                "pseudonym": true
                            }
                        ],
                        "extendedAttributes": []
                    }
                },
            {
                "attributeMapping": {
                    "attributeContractFulfillment": {
                        "entryUUID": {
                            "source": {"type": "ADAPTER"},
                            "value": "entryUUID"
                        },
                        "policy.action": {
                            "source": {"type": "ADAPTER"},
                            "value": "policy.action"
                        },
                        "username": {
                            "source": {"type": "ADAPTER"},
                            "value": "username"
                        }
                    },
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []}
                },
                "configuration": {
                    "tables": [{
                        "name": "Credential Validators",
                        "rows": [{
                            "defaultRow": false,
                            "fields": [{
                                "name": "Password Credential Validator Instance",
                                "value": "pingdirectory"
                            }]
                        }]
                    }],
                    "fields": [
                        {
                            "name": "Challenge Retries",
                            "value": "3"
                        },
                        {
                            "name": "Session State",
                            "value": "None"
                        },
                        {
                            "name": "Session Timeout",
                            "value": "60"
                        },
                        {
                            "name": "Session Max Timeout",
                            "value": "480"
                        },
                        {
                            "name": "Allow Password Changes",
                            "value": "false"
                        },
                        {
                            "name": "Password Management System",
                            "value": ""
                        },
                        {
                            "name": "Enable 'Remember My Username'",
                            "value": "false"
                        },
                        {
                            "name": "Enable 'This is My Device'",
                            "value": "false"
                        },
                        {
                            "name": "Change Password Email Notification",
                            "value": "false"
                        },
                        {
                            "name": "Show Password Expiring Warning",
                            "value": "false"
                        },
                        {
                            "name": "Password Reset Type",
                            "value": "NONE"
                        },
                        {
                            "name": "Account Unlock",
                            "value": "false"
                        },
                        {
                            "name": "Local Identity Profile",
                            "value": "RBSQIwi5KWYN9ZGK"
                        },
                        {
                            "name": "Enable Username Recovery",
                            "value": "false"
                        },
                        {
                            "name": "Login Template",
                            "value": "html.form.login.template.html"
                        },
                        {
                            "name": "Logout Path",
                            "value": ""
                        },
                        {
                            "name": "Logout Redirect",
                            "value": ""
                        },
                        {
                            "name": "Logout Template",
                            "value": "idp.logout.success.page.template.html"
                        },
                        {
                            "name": "Change Password Template",
                            "value": "html.form.change.password.template.html"
                        },
                        {
                            "name": "Change Password Message Template",
                            "value": "html.form.message.template.html"
                        },
                        {
                            "name": "Password Management System Message Template",
                            "value": "html.form.message.template.html"
                        },
                        {
                            "name": "Change Password Email Template",
                            "value": "message-template-end-user-password-change.html"
                        },
                        {
                            "name": "Expiring Password Warning Template",
                            "value": "html.form.password.expiring.notification.template.html"
                        },
                        {
                            "name": "Threshold for Expiring Password Warning",
                            "value": "7"
                        },
                        {
                            "name": "Snooze Interval for Expiring Password Warning",
                            "value": "24"
                        },
                        {
                            "name": "Login Challenge Template",
                            "value": "html.form.login.challenge.template.html"
                        },
                        {
                            "name": "'Remember My Username' Lifetime",
                            "value": "30"
                        },
                        {
                            "name": "'This is My Device' Lifetime",
                            "value": "30"
                        },
                        {
                            "name": "Allow Username Edits During Chaining",
                            "value": "false"
                        },
                        {
                            "name": "Track Authentication Time",
                            "value": "true"
                        },
                        {
                            "name": "Post-Password Change Re-Authentication Delay",
                            "value": "0"
                        },
                        {
                            "name": "Password Reset Username Template",
                            "value": "forgot-password.html"
                        },
                        {
                            "name": "Password Reset Code Template",
                            "value": "forgot-password-resume.html"
                        },
                        {
                            "name": "Password Reset Template",
                            "value": "forgot-password-change.html"
                        },
                        {
                            "name": "Password Reset Error Template",
                            "value": "forgot-password-error.html"
                        },
                        {
                            "name": "Password Reset Success Template",
                            "value": "forgot-password-success.html"
                        },
                        {
                            "name": "Account Unlock Template",
                            "value": "account-unlock.html"
                        },
                        {
                            "name": "OTP Length",
                            "value": "8"
                        },
                        {
                            "name": "OTP Time to Live",
                            "value": "10"
                        },
                        {
                            "name": "PingID Properties",
                            "value": ""
                        },
                        {
                            "name": "Require Verified Email",
                            "value": "false"
                        },
                        {
                            "name": "Username Recovery Template",
                            "value": "username.recovery.template.html"
                        },
                        {
                            "name": "Username Recovery Info Template",
                            "value": "username.recovery.info.template.html"
                        },
                        {
                            "name": "Username Recovery Email Template",
                            "value": "message-template-username-recovery.html"
                        },
                        {
                            "name": "CAPTCHA for Authentication",
                            "value": "false"
                        },
                        {
                            "name": "CAPTCHA for Password change",
                            "value": "false"
                        },
                        {
                            "name": "CAPTCHA for Password Reset",
                            "value": "false"
                        },
                        {
                            "name": "CAPTCHA for Username recovery",
                            "value": "false"
                        }
                    ]
                },
                "name": "HTMLFormPD",
                "id": "HTMLFormPD",
                "pluginDescriptorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter",
                    "id": "com.pingidentity.adapters.htmlform.idp.HtmlFormIdpAuthnAdapter"
                },
                "attributeContract": {
                    "maskOgnlValues": false,
                    "coreAttributes": [
                        {
                            "masked": false,
                            "name": "policy.action",
                            "pseudonym": false
                        },
                        {
                            "masked": false,
                            "name": "username",
                            "pseudonym": true
                        }
                    ],
                    "extendedAttributes": [{
                        "masked": false,
                        "name": "entryUUID",
                        "pseudonym": false
                    }]
                }
            },
            {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"phoneNumber": {
                            "source": {"type": "ADAPTER"},
                            "value": "phoneNumber"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [{
                            "name": "OTP length",
                            "value": "6"
                        }]
                    },
                    "name": "OTP new",
                    "id": "OTPnew",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.example.OTPAdapter",
                        "id": "uk.co.santander.auth.pf.plugins.example.OTPAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "coreAttributes": [{
                            "masked": false,
                            "name": "phoneNumber",
                            "pseudonym": true
                        }],
                        "extendedAttributes": []
                    }
            },
            {
                    "id": "LoadTestDummy1",
                    "name": "Load Test 1",
                    "pluginDescriptorRef": {
                        "id": "uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter"
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Mock API endpoint",
                                "value": "https://o5dqlz8u6e.execute-api.eu-west-2.amazonaws.com/test"
                            }
                        ]
                    },
                    "attributeContract": {
                        "coreAttributes": [
                            {
                                "name": "subject",
                                "masked": false,
                                "pseudonym": true
                            }
                        ],
                        "extendedAttributes": [],
                        "maskOgnlValues": false
                    },
                    "attributeMapping": {
                        "attributeSources": [],
                        "attributeContractFulfillment": {
                            "subject": {
                                "source": {
                                    "type": "ADAPTER"
                                },
                                "value": "subject"
                            }
                        },
                        "issuanceCriteria": {
                            "conditionalCriteria": []
                        }
                    }
                },
            {
                    "id": "LoadTestDummy2",
                    "name": "Load Test 2",
                    "pluginDescriptorRef": {
                        "id": "uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter"
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Mock API endpoint",
                                "value": "https://o5dqlz8u6e.execute-api.eu-west-2.amazonaws.com/test"
                            }
                        ]
                    },
                    "attributeContract": {
                        "coreAttributes": [
                            {
                                "name": "subject",
                                "masked": false,
                                "pseudonym": true
                            }
                        ],
                        "extendedAttributes": [],
                        "maskOgnlValues": false
                    },
                    "attributeMapping": {
                        "attributeSources": [],
                        "attributeContractFulfillment": {
                            "subject": {
                                "source": {
                                    "type": "ADAPTER"
                                },
                                "value": "subject"
                            }
                        },
                        "issuanceCriteria": {
                            "conditionalCriteria": []
                        }
                    }
                },
                {
                    "id": "LoadTestDummy3",
                    "name": "Load Test 3",
                    "pluginDescriptorRef": {
                        "id": "uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.DummyLoadAdapter"
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Mock API endpoint",
                                "value": "https://o5dqlz8u6e.execute-api.eu-west-2.amazonaws.com/test"
                            }
                        ]
                    },
                    "attributeContract": {
                        "coreAttributes": [
                            {
                                "name": "subject",
                                "masked": false,
                                "pseudonym": true
                            }
                        ],
                        "extendedAttributes": [],
                        "maskOgnlValues": false
                    },
                    "attributeMapping": {
                        "attributeSources": [],
                        "attributeContractFulfillment": {
                            "subject": {
                                "source": {
                                    "type": "ADAPTER"
                                },
                                "value": "subject"
                            }
                        },
                        "issuanceCriteria": {
                            "conditionalCriteria": []
                        }
                    }
                },
            {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"phoneNumber": {
                            "source": {"type": "ADAPTER"},
                            "value": "phoneNumber"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [{
                            "name": "OTP length",
                            "value": "6"
                        }]
                    },
                    "name": "OTP Test",
                    "id": "OTPtest",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.pf.example.OTPAdapter",
                        "id": "uk.co.santander.pf.example.OTPAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "coreAttributes": [{
                            "masked": false,
                            "name": "phoneNumber",
                            "pseudonym": true
                        }],
                        "extendedAttributes": []
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {
                            "subject": {
                                "source": {"type": "ADAPTER"},
                                "value": "subject"
                            },
                            "email": {
                                "source": {"type": "ADAPTER"},
                                "value": "email"
                            }
                        },
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [
                            {
                                "name": "Authentication Endpoint",
                                "value": "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/referenceid"
                            },
                            {
                                "name": "User Name",
                                "value": "testReferenceID"
                            },
                            {
                                "name": "Pass Phrase",
                                "value": "${idp_adapters_items_ReferenceID_configuration_fields_Pass_Phrase_value}"
                            },
                            {
                                "name": "Allowed Subject DN",
                                "value": ""
                            },
                            {
                                "name": "Allowed Issuer DN",
                                "value": ""
                            },
                            {
                                "name": "Logout Service Endpoint",
                                "value": ""
                            },
                            {
                                "name": "Logout Service Mode",
                                "value": "NONE"
                            },
                            {
                                "name": "Prefix Referenced Attributes",
                                "value": "true"
                            },
                            {
                                "name": "Ignore Untracked HTTP Parameters",
                                "value": "true"
                            },
                            {
                                "name": "Send Request Parameters",
                                "value": "NONE"
                            },
                            {
                                "name": "Transport Mode",
                                "value": "0"
                            },
                            {
                                "name": "Reference Duration",
                                "value": "95"
                            },
                            {
                                "name": "Reference Length",
                                "value": "30"
                            },
                            {
                                "name": "Require SSL/TLS",
                                "value": "true"
                            },
                            {
                                "name": "Outgoing Attribute Format",
                                "value": "JSON"
                            },
                            {
                                "name": "Incoming Attribute Format",
                                "value": "JSON"
                            },
                            {
                                "name": "Skip Host Name Validation ",
                                "value": "false"
                            },
                            {
                                "name": "Relax Password Requirements",
                                "value": "false"
                            }
                        ]
                    },
                    "name": "ReferenceID",
                    "id": "ReferenceID",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/com.pingidentity.pf.adapters.referenceid.IdpBackchannelReferenceAuthnAdapter",
                        "id": "com.pingidentity.pf.adapters.referenceid.IdpBackchannelReferenceAuthnAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "coreAttributes": [{
                            "masked": false,
                            "name": "subject",
                            "pseudonym": true
                        }],
                        "extendedAttributes": [{
                            "masked": false,
                            "name": "email",
                            "pseudonym": false
                        }]
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"FLOW": {
                            "source": {"type": "ADAPTER"},
                            "value": "FLOW"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [{
                            "name": "Flow Definition",
                            "value": "{    \"initialStep\":\"OTP\",   \"steps\": {\n       \"OTP\": {\n           \"adapterId\": \"OTPnew\",\n           \"success\": \"SUCCESS\",\n           \"failure\": \"FAILURE\",\n           \"navigations\": [           {               \"target\": \"goOtp\",               \"stepId\": \"OTPnew\"           }]       }}}"
                        }]
                    },
                    "name": "Resolver FLow",
                    "id": "ResolverFlow",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.ResolverFlowDummyAdapter",
                        "id": "uk.co.santander.auth.pf.engine.orchestrator.dummy.ResolverFlowDummyAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "coreAttributes": [{
                            "masked": false,
                            "name": "FLOW",
                            "pseudonym": true
                        }],
                        "extendedAttributes": []
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"UID": {
                            "source": {"type": "ADAPTER"},
                            "value": "UID"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "configuration": {
                        "tables": [],
                        "fields": [{
                            "name": "UID",
                            "value": "user.0"
                        }]
                    },
                    "name": "Resolver UID",
                    "id": "ResolverUid",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/descriptors/uk.co.santander.auth.pf.plugins.mock.ResolverUIDDummyAdapter",
                        "id": "uk.co.santander.auth.pf.engine.orchestrator.dummy.ResolverUIDDummyAdapter"
                    },
                    "attributeContract": {
                        "maskOgnlValues": false,
                        "coreAttributes": [{
                            "masked": false,
                            "name": "UID",
                            "pseudonym": true
                        }],
                        "extendedAttributes": []
                    }
                }
                ],
            "resourceType": "/idp/adapters"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "configuration": {
                    "tables": [{
                        "name": "Credential Validators",
                        "rows": [
                            {
                                "defaultRow": false,
                                "fields": [{
                                    "name": "Password Credential Validator Instance",
                                    "value": "pingdirectory"
                                }]
                            },
                            {
                                "defaultRow": false,
                                "fields": [{
                                    "name": "Password Credential Validator Instance",
                                    "value": "simple"
                                }]
                            }
                        ]
                    }],
                    "fields": [{
                        "name": "Authentication Attempts",
                        "value": "3"
                    }]
                },
                "name": "UsernameTokenProcessor",
                "id": "UsernameTokenProcessor",
                "pluginDescriptorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/tokenProcessors/descriptors/com.pingidentity.pf.tokenprocessors.username.UsernameTokenProcessor",
                    "id": "com.pingidentity.pf.tokenprocessors.username.UsernameTokenProcessor"
                },
                "attributeContract": {
                    "maskOgnlValues": false,
                    "coreAttributes": [{
                        "masked": false,
                        "name": "username"
                    }],
                    "extendedAttributes": []
                }
            }],
            "resourceType": "/idp/tokenProcessors"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "idpErrorMsg": "errorDetail.idpSsoFailure",
                "confirmIdpSlo": false
            }],
            "resourceType": "/idp/defaultUrls"
        },
        {
            "operationType": "SAVE",
            "items": [{"confirmSlo": false}],
            "resourceType": "/sp/defaultUrls"
        },
        {
            "operationType": "SAVE",
            "items": [{
                    "oidcClientCredentials": {"clientId": "Santander", "clientSecret": "none"},
                    "additionalAllowedEntitiesConfiguration": {
                        "additionalAllowedEntities": [],
                        "allowAdditionalEntities": false,
                        "allowAllEntities": false
                    },
                    "contactInfo": {},
                    "active": true,
                    "entityId": "https://poc.santander.co.uk",
                    "loggingMode": "STANDARD",
                    "type": "IDP",
                    "errorPageMsgId": "errorDetail.spSsoFailure",
                    "name": "Santander",
                    "idpOAuthGrantAttributeMapping": {
                        "idpOAuthAttributeContract": {
                            "coreAttributes": [{
                                "masked": false,
                                "name": "TOKEN_SUBJECT"
                            }],
                            "extendedAttributes": [{
                                "masked": false,
                                "name": "operation"
                            }]
                        },
                        "accessTokenManagerMappings": [
                            {
                            "attributeContractFulfillment": {
                                    "sub": {
                                        "source": {"type": "ASSERTION"},
                                        "value": "TOKEN_SUBJECT"
                                    },
                                    "cid": {
                                        "source": {"type": "ASSERTION"},
                                        "value": "TOKEN_SUBJECT"
                                    },
                                    "Username": {
                                        "source": {"type": "ASSERTION"},
                                        "value": "TOKEN_SUBJECT"
                                    },
                                    "OrgName": {"source": {"type": "NO_MAPPING"}
                                }
                            },
                           "attributeSources": [{
                                "dataStoreRef": {
                                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/dataStores/Other-C4AF65BDA32BF80D262B08CC795891D075A4264B",
                                    "id": "Other-C4AF65BDA32BF80D262B08CC795891D075A4264B"
                                },
                                "description": "Other",
                                "filterFields": [
                                    {
                                        "name": "Resource Path",
                                        "value": "/jwt-bearer-validate?uid=${TOKEN_SUBJECT}&operation=${operation}"
                                    },
                                    {
                                        "name": "Authorization Header",
                                        "value": ""
                                    }
                                ],
                                "type": "CUSTOM"
                            }],
                            "issuanceCriteria": {"conditionalCriteria": [{
                                "condition": "EQUALS",
                                "errorResult": "OPERATION NOT ALLOWED",
                                "attributeName": "valid",
                                "source": {"type": "CUSTOM_DATA_STORE"},
                                "value": "true"
                            }]},
                            "accessTokenManagerRef": {
                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                                "id": "jwt"
                            }
                        }]
                    },
                    "id": "STK1mtW1GAwzlmcAFsfLOz1aY9D",
                    "idpBrowserSso": {
                        "protocol": "OIDC",
                        "authenticationPolicyContractMappings": [],
                        "oidcProviderSettings": {
                            "tokenEndpoint": "https://poc.santander.co.uk/none",
                            "jwksURL": "https://285caac4-b7b3-4a07-818c-8ff986801dfd.mock.pstmn.io/jwks.json",
                            "loginType": "CODE",
                            "authenticationScheme": "BASIC",
                            "enablePKCE": false,
                            "requestParameters": [],
                            "scopes": "openid",
                            "userInfoEndpoint": "",
                            "authorizationEndpoint": "https://poc.santander.co.uk/none"
                        },
                        "defaultTargetUrl": "",
                        "idpIdentityMapping": "NONE",
                        "adapterMappings": [],
                        "attributeContract": {
                            "coreAttributes": [
                                {
                                    "masked": false,
                                    "name": "customerID"
                                },
                                {
                                    "masked": false,
                                    "name": "userID"
                                }
                            ],
                            "extendedAttributes": []
                        }
                    },
                    "licenseConnectionGroup": ""
                },{
                "baseUrl": "https://${PF_ENGINE_PUBLIC_HOSTNAME}:${PF_ENGINE_PUBLIC_PORT_HTTPS}",
                "contactInfo": {},
                "virtualEntityIds": [],
                "credentials": {"certs": [{
                    "primaryVerificationCert": true,
                    "certView": {
                        "expires": "2034-01-24T03:14:52.000Z",
                        "serialNumber": "1548645292611",
                        "keyAlgorithm": "RSA",
                        "keySize": 2048,
                        "subjectAlternativeNames": [],
                        "issuerDN": "CN=Config Signing Cert, OU=Dev, O=Ping, L=Denver, ST=CO, C=US",
                        "sha1Fingerprint": "13976C5558255CE81F3C4416C8A3A1C4767E5457",
                        "validFrom": "2019-01-28T03:14:52.000Z",
                        "version": 3,
                        "signatureAlgorithm": "SHA256withRSA",
                        "sha256Fingerprint": "88C7C985F053DB8329851CCF9E41D052185BA39811C980CD1A405F3F5607DA58",
                        "id": "a5kvb66kyxbmdfwp506gijvn6",
                        "subjectDN": "CN=Config Signing Cert, OU=Dev, O=Ping, L=Denver, ST=CO, C=US",
                        "status": "VALID"
                    },
                    "secondaryVerificationCert": false,
                    "x509File": {
                        "fileData": "${sp_idpConnections_items_aLGfLX1_K4VP6a3uGh33YOuZodG_credentials_certs_x509File_a5kvb66kyxbmdfwp506gijvn6_a5kvb66kyxbmdfwp506gijvn6_fileData}",
                        "id": "a5kvb66kyxbmdfwp506gijvn6"
                    },
                    "encryptionCert": false,
                    "activeVerificationCert": true
                }]},
                "name": "docker",
                "idpOAuthGrantAttributeMapping": {
                    "idpOAuthAttributeContract": {
                        "coreAttributes": [{
                            "masked": false,
                            "name": "TOKEN_SUBJECT"
                        }],
                        "extendedAttributes": []
                    },
                    "accessTokenManagerMappings": [{
                        "attributeContractFulfillment": {
                            "sub": {
                                "source": {"type": "ASSERTION"},
                                "value": "TOKEN_SUBJECT"
                            },
                            "Username": {
                                "source": {"type": "ASSERTION"},
                                "value": "TOKEN_SUBJECT"
                            },
                            "OrgName": {
                                "source": {"type": "TEXT"},
                                "value": "Ping Identity Corporation"
                            },
                            "cid": {
                                "source": {"type": "ASSERTION"},
                                "value": "TOKEN_SUBJECT"
                            }
                        },
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []},
                        "accessTokenManagerRef": {
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                            "id": "jwt"
                        }
                    }]
                },
                "active": true,
                "entityId": "docker",
                "loggingMode": "STANDARD",
                "id": "aLGfLX1-K4VP6a3uGh33YOuZodG",
                "type": "IDP"
            }],
            "resourceType": "/sp/idpConnections"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "baseUrl": "https://${PF_ENGINE_PUBLIC_HOSTNAME}:${PF_ENGINE_PUBLIC_PORT_HTTPS}",
                    "contactInfo": {},
                    "wsTrust": {
                        "generateKey": false,
                        "defaultTokenType": "SAML20",
                        "encryptSaml2Assertion": false,
                        "partnerServiceIds": [
                            "localhost:default:entityId",
                            "docker"
                        ],
                        "minutesAfter": 30,
                        "oAuthAssertionProfiles": true,
                        "tokenProcessorMappings": [{
                            "restrictedVirtualEntityIds": [],
                            "attributeContractFulfillment": {"TOKEN_SUBJECT": {
                                "source": {"type": "TOKEN"},
                                "value": "username"
                            }},
                            "idpTokenProcessorRef": {
                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/tokenProcessors/UsernameTokenProcessor",
                                "id": "UsernameTokenProcessor"
                            },
                            "attributeSources": [],
                            "issuanceCriteria": {"conditionalCriteria": []}
                        }],
                        "minutesBefore": 5,
                        "attributeContract": {
                            "coreAttributes": [{"name": "TOKEN_SUBJECT"}],
                            "extendedAttributes": []
                        }
                    },
                    "virtualEntityIds": [],
                    "credentials": {
                        "certs": [],
                        "signingSettings": {
                            "signingKeyPairRef": {
                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/signing/devsigningcert",
                                "id": "devsigningcert"
                            },
                            "includeRawKeyInSignature": false,
                            "includeCertInSignature": false,
                            "algorithm": "SHA256withRSA"
                        }
                    },
                    "name": "docker",
                    "active": true,
                    "entityId": "docker",
                    "loggingMode": "STANDARD",
                    "id": "IENFjGICXt3YsBKNxHSzkN28LWg",
                    "type": "SP"
                },
                {
                    "contactInfo": {},
                    "virtualEntityIds": [],
                    "credentials": {
                        "certs": [],
                        "signingSettings": {
                            "signingKeyPairRef": {
                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/keyPairs/signing/devsigningcert",
                                "id": "devsigningcert"
                            },
                            "includeRawKeyInSignature": false,
                            "includeCertInSignature": false,
                            "algorithm": "SHA256withRSA"
                        }
                    },
                    "name": "Dummy SP Connection",
                    "active": true,
                    "spBrowserSso": {
                        "protocol": "SAML20",
                        "requireSignedAuthnRequests": false,
                        "spSamlIdentityMapping": "STANDARD",
                        "signAssertions": false,
                        "authenticationPolicyContractAssertionMappings": [{
                            "abortSsoTransactionAsFailSafe": false,
                            "authenticationPolicyContractRef": {
                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/Zxp6N6W5PH9onACT",
                                "id": "Zxp6N6W5PH9onACT"
                            },
                            "restrictedVirtualEntityIds": [],
                            "attributeContractFulfillment": {"SAML_SUBJECT": {
                                "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                                "value": "subject"
                            }},
                            "restrictVirtualEntityIds": false,
                            "attributeSources": [],
                            "issuanceCriteria": {"conditionalCriteria": []}
                        }],
                        "encryptionPolicy": {
                            "encryptSloSubjectNameId": false,
                            "encryptAssertion": false,
                            "encryptedAttributes": [],
                            "sloSubjectNameIDEncrypted": false
                        },
                        "enabledProfiles": ["IDP_INITIATED_SSO"],
                        "signResponseAsRequired": true,
                        "ssoServiceEndpoints": [{
                            "isDefault": true,
                            "binding": "POST",
                            "index": 0,
                            "url": "https://httpbin.org/anything"
                        }],
                        "adapterMappings": [],
                        "assertionLifetime": {
                            "minutesAfter": 5,
                            "minutesBefore": 5
                        },
                        "attributeContract": {
                            "coreAttributes": [{
                                "nameFormat": "urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified",
                                "name": "SAML_SUBJECT"
                            }],
                            "extendedAttributes": []
                        }
                    },
                    "entityId": "https://httpbin.org",
                    "loggingMode": "STANDARD",
                    "id": "gpFvXmhDHSRUSHWLZLZ_XBIU_YK",
                    "type": "SP",
                    "licenseConnectionGroup": ""
                }
            ],
            "resourceType": "/idp/spConnections"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "trackAdapterSessionsForLogout": false,
                "sessionRevocationLifetime": 490,
                "revokeUserSessionOnLogout": true
            }],
            "resourceType": "/session/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "maxTimeoutMins": 480,
                "idleTimeoutMins": 60
            }],
            "resourceType": "/session/applicationSessionPolicy"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "persistentSessions": false,
                "maxTimeoutMins": 480,
                "maxTimeoutDisplayUnit": "MINUTES",
                "idleTimeoutMins": 60,
                "idleTimeoutDisplayUnit": "MINUTES",
                "enableSessions": false
            }],
            "resourceType": "/session/authenticationSessionPolicies/global"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "persistentGrantContract": {
                    "coreAttributes": [
                        {"name": "USER_KEY"},
                        {"name": "USER_NAME"}
                    ],
                    "extendedAttributes": []
                },
                "scopeGroups": [],
                "atmIdForOAuthGrantManagement": "",
                "refreshRollingInterval": 0,
                "tokenEndpointBaseUrl": "",
                "trackUserSessionsForLogout": false,
                "defaultScopeDescription": "default",
                "authorizationCodeEntropy": 30,
                "rollRefreshTokenValues": false,
                "allowedOrigins": [
                    "https://localhost",
                    "https://${PF_ENGINE_PUBLIC_HOSTNAME}:${PF_ENGINE_PUBLIC_PORT_HTTPS}",
                    "https://${PD_DELEGATOR_PUBLIC_HOSTNAME}:${PD_DELEGATOR_PUBLIC_PORT_HTTPS}",
                    "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/",
                    "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080"
                ],
                "allowUnidentifiedClientExtensionGrants": false,
                "devicePollingInterval": 5,
                "userAuthorizationUrl": "",
                "pendingAuthorizationTimeout": 600,
                "exclusiveScopeGroups": [],
                "userAuthorizationConsentPageSetting": "INTERNAL",
                "bypassActivationCodeConfirmation": false,
                "persistentGrantReuseGrantTypes": ["IMPLICIT"],
                "registeredAuthorizationPath": "",
                "refreshTokenLength": 42,
                "allowUnidentifiedClientROCreds": false,
                "authorizationCodeTimeout": 60,
                "persistentGrantLifetime": 10,
                "persistentGrantLifetimeUnit": "MINUTES",
                "persistentGrantIdleTimeout": -1,
                "persistentGrantIdleTimeoutTimeUnit": "DAYS",
                "scopes": [
                    {
                        "name": "address",
                        "description": "Address access",
                        "dynamic": false
                    },
                    {
                        "name": "phone",
                        "description": "Phone Number access",
                        "dynamic": false
                    },
                    {
                        "name": "edit",
                        "description": "Edit permissions",
                        "dynamic": false
                    },
                    {
                        "name": "openid",
                        "description": "OpenID Connect login",
                        "dynamic": false
                    },
                    {
                        "name": "profile",
                        "description": "Profile access",
                        "dynamic": false
                    },
                    {
                        "name": "admin",
                        "description": "Admin permissions",
                        "dynamic": false
                    },
                    {
                        "name": "email",
                        "description": "Email Address access",
                        "dynamic": false
                    }
                ],
                "scopeForOAuthGrantManagement": "",
                "exclusiveScopes": [{
                    "name": "urn:pingidentity:directory-delegated-admin",
                    "description": "Directory Delegated Admin",
                    "dynamic": false
                },
                {
                        "name": "payments",
                        "description": "payments",
                        "dynamic": false
                    }],
                "bypassAuthorizationForApprovedGrants": false
            }],
            "resourceType": "/oauth/authServerSettings"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "attributeSources": [],
                    "attributeContractFulfillment": {
                        "USER_NAME": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "subject"
                        },
                        "USER_KEY": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "subject"
                        }
                    },
                    "issuanceCriteria": {
                        "conditionalCriteria": []
                    },
                    "id": "QspymyEwcU7EQAOm",
                    "authenticationPolicyContractRef": {
                        "id": "QspymyEwcU7EQAOm",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/QspymyEwcU7EQAOm"
                    }
                },
                {
                    "authenticationPolicyContractRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/Zxp6N6W5PH9onACT",
                        "id": "Zxp6N6W5PH9onACT"
                    },
                    "attributeContractFulfillment": {
                        "USER_NAME": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        },
                        "USER_KEY": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        }
                    },
                    "id": "Zxp6N6W5PH9onACT",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []}
                 },
                {
                    "authenticationPolicyContractRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/qzMQD2kM2Lr0TiDs",
                        "id": "qzMQD2kM2Lr0TiDs"
                    },
                    "attributeContractFulfillment": {
                        "USER_NAME": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "cid"
                        },
                        "USER_KEY": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        }
                    },
                    "id": "qzMQD2kM2Lr0TiDs",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []}
                }
            ],
            "resourceType": "/oauth/authenticationPolicyContractMappings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "passwordValidatorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/passwordCredentialValidators/pingdirectory",
                    "id": "pingdirectory"
                },
                "attributeContractFulfillment": {"USER_KEY": {
                    "source": {"type": "PASSWORD_CREDENTIAL_VALIDATOR"},
                    "value": "mail"
                }},
                "id": "pingdirectory",
                "attributeSources": [],
                "issuanceCriteria": {"conditionalCriteria": []}
            }],
            "resourceType": "/oauth/resourceOwnerCredentialsMappings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "configuration": {
                    "tables": [],
                    "fields": [
                        {
                            "name": "From Address",
                            "value": "test"
                        },
                        {
                            "name": "Authorization APP",
                            "value": "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/oobauth"
                        },
                        {
                            "name": "Authorization APP Claims",
                            "value": "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/oobauthclaim"
                        },
                        {
                            "name": "Make Status Change Callback",
                            "value": "false"
                        }
                    ]
                },
                "name": "CibaTest",
                "id": "CibaTest",
                "pluginDescriptorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/outOfBandAuthPlugins/descriptors/com.pingidentity.ciba.CibaTest",
                    "id": "com.pingidentity.ciba.CibaTest"
                },
                "attributeContract": {
                    "coreAttributes": [{"name": "claims"}, {"name": "email"}],
                    "extendedAttributes": []
                }
            }],
            "resourceType": "/oauth/outOfBandAuthPlugins"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "alternativeLoginHintTokenIssuers": [],
                "allowUnsignedLoginHintToken": false,
                "requireTokenForIdentityHint": false,
                "identityHintContract": {
                    "coreAttributes": [{"name": "IDENTITY_HINT_SUBJECT"}],
                    "extendedAttributes": []
                },
                "identityHintContractFulfillment": {
                    "attributeContractFulfillment": {"IDENTITY_HINT_SUBJECT": {
                        "source": {"type": "REQUEST"},
                        "value": "IDENTITY_HINT_SUBJECT"
                    }},
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []}
                },
                "transactionLifetime": 120,
                "name": "Ciba Test Policy",
                "identityHintMapping": {
                    "attributeContractFulfillment": {
                        "USER_KEY": {
                            "source": {"type": "REQUEST"},
                            "value": "IDENTITY_HINT_SUBJECT"
                        },
                        "email": {
                            "source": {"type": "REQUEST"},
                            "value": "IDENTITY_HINT_SUBJECT"
                        },
                        "claims": {
                            "source": {"type": "EXPRESSION"},
                            "value": "#result = #this.get(\"context.HttpRequest\").getObjectValue().getParameter(\"claims\") != null ? #this.get(\"context.HttpRequest\").getObjectValue().getParameter(\"claims\").toString() : null"
                        }
                    },
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []}
                },
                "id": "CibaTestPolicy",
                "authenticatorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/outOfBandAuthPlugins/CibaTest",
                    "id": "CibaTest"
                }
            }],
            "resourceType": "/oauth/cibaServerPolicy/requestPolicies"
        },
        {
            "operationType": "SAVE",
            "items": [{
                    "configuration": {
                        "tables": [{
                            "name": "Clients",
                            "rows": [{
                                "defaultRow": false,
                                "fields": [{
                                    "name": "Client ID",
                                    "value": "mock_client"
                                }]
                            }]
                        }],
                        "fields": []
                    },
                    "name": "Mock Client Selector",
                    "id": "MockClientSelector",
                    "pluginDescriptorRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationSelectors/descriptors/com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector",
                        "id": "com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector"
                    },
                    "attributeContract": {}
                },
                {
                "configuration": {
                    "tables": [{
                        "name": "Clients",
                        "rows": [{
                            "defaultRow": false,
                            "fields": [{
                                "name": "Client ID",
                                "value": "refid_client"
                            }]
                        }]
                    }],
                    "fields": []
                },
                "name": "Reference ID selector",
                "id": "RefIDSelector",
                "pluginDescriptorRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationSelectors/descriptors/com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector",
                    "id": "com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector"
                },
                "attributeContract": {}
            },
            {
                    "id": "LoadTestSelector",
                    "name": "Load Test Selector",
                    "pluginDescriptorRef": {
                        "id": "com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationSelectors/descriptors/com.pingidentity.pf.selectors.oauthclient.OAuthClientAdapterSelector"
                    },
                    "configuration": {
                        "tables": [
                            {
                                "name": "Clients",
                                "rows": [
                                    {
                                        "fields": [
                                            {
                                                "name": "Client ID",
                                                "value": "load_test_client"
                                            }
                                        ],
                                        "defaultRow": false
                                    }
                                ]
                            }
                        ],
                        "fields": []
                    },
                    "attributeContract": {}
                }],
            "resourceType": "/authenticationSelectors"
        },
        {
            "operationType": "SAVE",
            "items": [{"defaultRequestPolicyRef": {
                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/cibaServerPolicy/requestPolicies/CibaTestPolicy",
                "id": "CibaTestPolicy"
            }}],
            "resourceType": "/oauth/cibaServerPolicy/settings"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {
                            "sub": {
                                "source": {"type": "TOKEN"},
                                "value": "subject"
                            },
                            "zoneinfo": {
                                "source": {"type": "TEXT"},
                                "value": "America/New_York"
                            },
                            "address.locality": {
                                "source": {"type": "TEXT"},
                                "value": "Smallville"
                            },
                            "birthdate": {
                                "source": {"type": "TEXT"},
                                "value": "1977-12-31"
                            },
                            "gender": {
                                "source": {"type": "TEXT"},
                                "value": "female"
                            },
                            "preferred_username": {
                                "source": {"type": "TEXT"},
                                "value": "mgsample"
                            },
                            "locale": {
                                "source": {"type": "TEXT"},
                                "value": "en_US"
                            },
                            "address.country": {
                                "source": {"type": "TEXT"},
                                "value": "USA"
                            },
                            "updated_at": {
                                "source": {"type": "TEXT"},
                                "value": "2011-01-03T23:58:42+0000"
                            },
                            "address.postal_code": {
                                "source": {"type": "TEXT"},
                                "value": "11223"
                            },
                            "address.region": {
                                "source": {"type": "TEXT"},
                                "value": "ME"
                            },
                            "nickname": {
                                "source": {"type": "TEXT"},
                                "value": "Name"
                            },
                            "email": {
                                "source": {"type": "TEXT"},
                                "value": "auser@example.com"
                            },
                            "website": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/"
                            },
                            "email_verified": {
                                "source": {"type": "TEXT"},
                                "value": "true"
                            },
                            "profile": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/products/pingfederate/"
                            },
                            "phone_number_verified": {
                                "source": {"type": "TEXT"},
                                "value": "true"
                            },
                            "given_name": {
                                "source": {"type": "TEXT"},
                                "value": "Mary"
                            },
                            "middle_name": {
                                "source": {"type": "TEXT"},
                                "value": "Good"
                            },
                            "picture": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/images/ping-logo.png"
                            },
                            "name": {
                                "source": {"type": "TEXT"},
                                "value": "Mary Good Sample"
                            },
                            "phone_number": {
                                "source": {"type": "TEXT"},
                                "value": "(555) 555-5555"
                            },
                            "address.formatted": {
                                "source": {"type": "TEXT"},
                                "value": "123 Main Street, Smallville, ME USA 11223"
                            },
                            "family_name": {
                                "source": {"type": "TEXT"},
                                "value": "Sample"
                            },
                            "address.street_address": {
                                "source": {"type": "TEXT"},
                                "value": "123 Main Street"
                            }
                        },
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "name": "LoadTest",
                    "scopeAttributeMappings": {},
                    "returnIdTokenOnRefreshGrant": false,
                    "id": "LoadTest",
                    "includeSriInIdToken": false,
                    "includeSHashInIdToken": false,
                    "includeUserInfoInIdToken": false,
                    "idTokenLifetime": 5,
                    "attributeContract": {
                        "coreAttributes": [{"name": "sub"}],
                        "extendedAttributes": [
                            {"name": "zoneinfo"},
                            {"name": "website"},
                            {"name": "address.locality"},
                            {"name": "birthdate"},
                            {"name": "email_verified"},
                            {"name": "gender"},
                            {"name": "profile"},
                            {"name": "phone_number_verified"},
                            {"name": "preferred_username"},
                            {"name": "locale"},
                            {"name": "given_name"},
                            {"name": "middle_name"},
                            {"name": "picture"},
                            {"name": "address.country"},
                            {"name": "updated_at"},
                            {"name": "address.postal_code"},
                            {"name": "address.region"},
                            {"name": "nickname"},
                            {"name": "name"},
                            {"name": "phone_number"},
                            {"name": "address.formatted"},
                            {"name": "family_name"},
                            {"name": "email"},
                            {"name": "address.street_address"}
                        ]
                    },
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/OpaqueToken",
                        "id": "OpaqueToken"
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {
                            "sub": {
                                "source": {"type": "TOKEN"},
                                "value": "Username"
                            },
                            "zoneinfo": {
                                "source": {"type": "TEXT"},
                                "value": "America/New_York"
                            },
                            "address.locality": {
                                "source": {"type": "TEXT"},
                                "value": "Smallville"
                            },
                            "birthdate": {
                                "source": {"type": "TEXT"},
                                "value": "1977-12-31"
                            },
                            "gender": {
                                "source": {"type": "TEXT"},
                                "value": "female"
                            },
                            "preferred_username": {
                                "source": {"type": "TEXT"},
                                "value": "mgsample"
                            },
                            "locale": {
                                "source": {"type": "TEXT"},
                                "value": "en_US"
                            },
                            "address.country": {
                                "source": {"type": "TEXT"},
                                "value": "USA"
                            },
                            "updated_at": {
                                "source": {"type": "TEXT"},
                                "value": "2011-01-03T23:58:42+0000"
                            },
                            "address.postal_code": {
                                "source": {"type": "TEXT"},
                                "value": "11223"
                            },
                            "address.region": {
                                "source": {"type": "TEXT"},
                                "value": "ME"
                            },
                            "nickname": {
                                "source": {"type": "TEXT"},
                                "value": "Name"
                            },
                            "email": {
                                "source": {"type": "TEXT"},
                                "value": "auser@example.com"
                            },
                            "website": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/"
                            },
                            "email_verified": {
                                "source": {"type": "TEXT"},
                                "value": "true"
                            },
                            "profile": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/products/pingfederate/"
                            },
                            "phone_number_verified": {
                                "source": {"type": "TEXT"},
                                "value": "true"
                            },
                            "given_name": {
                                "source": {"type": "TEXT"},
                                "value": "Mary"
                            },
                            "middle_name": {
                                "source": {"type": "TEXT"},
                                "value": "Good"
                            },
                            "picture": {
                                "source": {"type": "TEXT"},
                                "value": "https://www.pingidentity.com/images/ping-logo.png"
                            },
                            "name": {
                                "source": {"type": "TEXT"},
                                "value": "Mary Good Sample"
                            },
                            "phone_number": {
                                "source": {"type": "TEXT"},
                                "value": "(555) 555-5555"
                            },
                            "address.formatted": {
                                "source": {"type": "TEXT"},
                                "value": "123 Main Street, Smallville, ME USA 11223"
                            },
                            "family_name": {
                                "source": {"type": "TEXT"},
                                "value": "Sample"
                            },
                            "address.street_address": {
                                "source": {"type": "TEXT"},
                                "value": "123 Main Street"
                            }
                        },
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "name": "OAuthPlayground",
                    "scopeAttributeMappings": {},
                    "returnIdTokenOnRefreshGrant": false,
                    "id": "OAuthPlayground",
                    "includeSriInIdToken": false,
                    "includeSHashInIdToken": false,
                    "includeUserInfoInIdToken": false,
                    "idTokenLifetime": 5,
                    "attributeContract": {
                        "coreAttributes": [{"name": "sub"}],
                        "extendedAttributes": [
                            {"name": "zoneinfo"},
                            {"name": "website"},
                            {"name": "address.locality"},
                            {"name": "birthdate"},
                            {"name": "email_verified"},
                            {"name": "gender"},
                            {"name": "profile"},
                            {"name": "phone_number_verified"},
                            {"name": "preferred_username"},
                            {"name": "locale"},
                            {"name": "given_name"},
                            {"name": "middle_name"},
                            {"name": "picture"},
                            {"name": "address.country"},
                            {"name": "updated_at"},
                            {"name": "address.postal_code"},
                            {"name": "address.region"},
                            {"name": "nickname"},
                            {"name": "name"},
                            {"name": "phone_number"},
                            {"name": "address.formatted"},
                            {"name": "family_name"},
                            {"name": "email"},
                            {"name": "address.street_address"}
                        ]
                    },
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"sub": {
                            "source": {"type": "TOKEN"},
                            "value": "Username"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "name": "pingaccess",
                    "scopeAttributeMappings": {},
                    "returnIdTokenOnRefreshGrant": false,
                    "id": "pingaccess",
                    "includeSriInIdToken": true,
                    "includeSHashInIdToken": false,
                    "includeUserInfoInIdToken": true,
                    "idTokenLifetime": 5,
                    "attributeContract": {
                        "coreAttributes": [{"name": "sub"}],
                        "extendedAttributes": []
                    },
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                },
                {
                    "attributeMapping": {
                        "attributeContractFulfillment": {"sub": {
                            "source": {"type": "TOKEN"},
                            "value": "Username"
                        }},
                        "attributeSources": [],
                        "issuanceCriteria": {"conditionalCriteria": []}
                    },
                    "name": "pingdelegator",
                    "scopeAttributeMappings": {},
                    "returnIdTokenOnRefreshGrant": false,
                    "id": "pingdelegator",
                    "includeSriInIdToken": false,
                    "includeSHashInIdToken": false,
                    "includeUserInfoInIdToken": false,
                    "idTokenLifetime": 5,
                    "attributeContract": {
                        "coreAttributes": [{"name": "sub"}],
                        "extendedAttributes": []
                    },
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                }
            ],
            "resourceType": "/oauth/openIdConnect/policies"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "defaultPolicyRef": {
                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/openIdConnect/policies/OAuthPlayground",
                    "id": "OAuthPlayground"
                },
                "sessionSettings": {
                    "sessionRevocationLifetime": 490,
                    "trackUserSessionsForLogout": false,
                    "revokeUserSessionOnLogout": true
                }
            }],
            "resourceType": "/oauth/openIdConnect/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{}],
            "resourceType": "/oauth/tokenExchange/processor/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{}],
            "resourceType": "/oauth/tokenExchange/generator/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{"clientMetadata": []}],
            "resourceType": "/oauth/clientSettings"
        },
        {
            "operationType": "SAVE",
            "items": [
                {
                    "attributeSources": [],
                    "attributeContractFulfillment": {
                        "jwt": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "jwt"
                        },
                        "subject": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "subject"
                        },
                        "authorisation_id": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "authorisation_id"
                        },
                        "resources": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "resources"
                        },
                        "extra_data_test": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "extra_data_test"
                        },
                        "extra_data_backpack": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "extra_data_backpack"
                        }
                    },
                    "issuanceCriteria": {
                        "conditionalCriteria": []
                    },
                    "id": "authz_req|apc.QspymyEwcU7EQAOm|OpaqueToken",
                    "context": {
                        "type": "AUTHENTICATION_POLICY_CONTRACT",
                        "contextRef": {
                            "id": "QspymyEwcU7EQAOm",
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/QspymyEwcU7EQAOm"
                        }
                    },
                    "accessTokenManagerRef": {
                        "id": "OpaqueToken",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/OpaqueToken"
                    }
                },
                {
                    "attributeSources": [],
                    "attributeContractFulfillment": {
                        "sub": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "subject"
                        },
                        "Username": {
                            "source": {
                                "type": "AUTHENTICATION_POLICY_CONTRACT"
                            },
                            "value": "subject"
                        },
                        "OrgName": {
                            "source": {
                                "type": "TEXT"
                            },
                            "value": "LoadTest"
                        },
                        "cid": {
                            "source": {
                                "type": "TEXT"
                            },
                            "value": "CID"
                        }
                    },
                    "issuanceCriteria": {
                        "conditionalCriteria": []
                    },
                    "id": "authz_req|apc.QspymyEwcU7EQAOm|jwt",
                    "context": {
                        "type": "AUTHENTICATION_POLICY_CONTRACT",
                        "contextRef": {
                            "id": "QspymyEwcU7EQAOm",
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/QspymyEwcU7EQAOm"
                        }
                    },
                    "accessTokenManagerRef": {
                        "id": "jwt",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt"
                    }
                },
                {
                    "context": {
                        "contextRef": {
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/Zxp6N6W5PH9onACT",
                            "id": "Zxp6N6W5PH9onACT"
                        },
                        "type": "AUTHENTICATION_POLICY_CONTRACT"
                    },
                    "attributeContractFulfillment": {
                        "sub": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        },
                        "Username": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        },
                        "OrgName": {
                            "source": {"type": "TEXT"},
                            "value": "PingIdentity"
                        },
                        "cid": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "mail"
                        }
                    },
                    "id": "authz_req|apc.Zxp6N6W5PH9onACT|jwt",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []},
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                },
                {
                    "context": {
                        "contextRef": {
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/qzMQD2kM2Lr0TiDs",
                            "id": "qzMQD2kM2Lr0TiDs"
                        },
                        "type": "AUTHENTICATION_POLICY_CONTRACT"
                    },
                    "attributeContractFulfillment": {
                        "sub": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "subject"
                        },
                        "Username": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "cid"
                        },
                        "OrgName": {
                            "source": {"type": "TEXT"},
                            "value": "PingFederate"
                        },
                        "cid": {
                            "source": {"type": "AUTHENTICATION_POLICY_CONTRACT"},
                            "value": "cid"
                        }
                    },
                    "id": "authz_req|apc.qzMQD2kM2Lr0TiDs|jwt",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []},
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                },
                {
                    "context": {"type": "DEFAULT"},
                    "attributeContractFulfillment": {
                        "sub": {
                            "source": {"type": "OAUTH_PERSISTENT_GRANT"},
                            "value": "USER_KEY"
                        },
                        "Username": {
                            "source": {"type": "OAUTH_PERSISTENT_GRANT"},
                            "value": "USER_KEY"
                        },
                        "OrgName": {
                            "source": {"type": "TEXT"},
                            "value": "CIBA"
                        },
                        "cid": {
                            "source": {"type": "OAUTH_PERSISTENT_GRANT"},
                            "value": "USER_KEY"
                        }
                    },
                    "id": "default|jwt",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []},
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                },
                {
                    "context": {
                        "contextRef": {
                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/passwordCredentialValidators/pingdirectory",
                            "id": "pingdirectory"
                        },
                        "type": "PCV"
                    },
                    "attributeContractFulfillment": {
                        "sub": {
                            "source": {"type": "OAUTH_PERSISTENT_GRANT"},
                            "value": "USER_KEY"
                        },
                        "Username": {
                            "source": {"type": "PASSWORD_CREDENTIAL_VALIDATOR"},
                            "value": "mail"
                        },
                        "OrgName": {
                            "source": {"type": "TEXT"},
                            "value": "PingIdentity"
                        },
                        "cid": {
                            "source": {"type": "PASSWORD_CREDENTIAL_VALIDATOR"},
                            "value": "mail"
                        }
                    },
                    "id": "password|pingdirectory|jwt",
                    "attributeSources": [],
                    "issuanceCriteria": {"conditionalCriteria": []},
                    "accessTokenManagerRef": {
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/oauth/accessTokenManagers/jwt",
                        "id": "jwt"
                    }
                }
            ],
            "resourceType": "/oauth/accessTokenMappings"
        },
        {
            "resourceType": "/authenticationApi",
            "operationType": "SAVE",
            "items": [
                {
                    "additionalAllowedOrigins": [
                        "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/",
                        "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080",
                        "https://*.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080"
                    ],
                    "id": "L7hvyKCPRQP4WfTTN9S5Uw9sw",
                    "url": "https://app.suks1ew2accsinnovgene002.sandbox.tlzproject.com:8080/",
                    "description": "test app for authentictaion",
                    "name": "AuthAPP"
                }
            ]
        },
        {
            "operationType": "SAVE",
            "items": [{
                "defaultAuthenticationSources": [],
                "failIfNoSelection": false,
                "authnSelectionTrees": [
                    {
                        "name": "Mock Policy",
                        "description": "This policy is for test purpose only, will never interact with the user completing the auhtoriztaion flow automatically.",
                        "enabled": true,
                        "rootNode": {
                            "children": [
                                {"action": {
                                    "context": "No",
                                    "type": "CONTINUE"
                                }},
                                {
                                    "children": [
                                        {"action": {
                                            "context": "Fail",
                                            "type": "DONE"
                                        }},
                                        {"action": {
                                            "attributeMapping": {
                                                "attributeContractFulfillment": {
                                                    "subject": {
                                                        "source": {
                                                            "id": "DummyAdapterTest",
                                                            "type": "ADAPTER"
                                                        },
                                                        "value": "userID"
                                                    },
                                                    "cid": {
                                                        "source": {
                                                            "id": "DummyAdapterTest",
                                                            "type": "ADAPTER"
                                                        },
                                                        "value": "customerID"
                                                    }
                                                },
                                                "attributeSources": [],
                                                "issuanceCriteria": {"conditionalCriteria": []}
                                            },
                                            "authenticationPolicyContractRef": {
                                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/qzMQD2kM2Lr0TiDs",
                                                "id": "qzMQD2kM2Lr0TiDs"
                                            },
                                            "context": "Success",
                                            "type": "APC_MAPPING"
                                        }}
                                    ],
                                    "action": {
                                        "authenticationSource": {
                                            "type": "IDP_ADAPTER",
                                            "sourceRef": {
                                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/DummyAdapterTest",
                                                "id": "DummyAdapterTest"
                                            }
                                        },
                                        "context": "Yes",
                                        "type": "AUTHN_SOURCE"
                                    }
                                }
                            ],
                            "action": {
                                "authenticationSelectorRef": {
                                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationSelectors/MockClientSelector",
                                    "id": "MockClientSelector"
                                },
                                "type": "AUTHN_SELECTOR"
                            }
                        }
                    },
                    {
                        "name": "Reference ID",
                        "description": "A test to see how reference ID works",
                        "enabled": true,
                        "rootNode": {
                            "children": [
                                {"action": {
                                    "context": "No",
                                    "type": "CONTINUE"
                                }},
                                {
                                    "children": [
                                        {"action": {
                                            "context": "Fail",
                                            "type": "DONE"
                                        }},
                                        {"action": {
                                            "attributeMapping": {
                                                "attributeContractFulfillment": {
                                                    "mail": {
                                                        "source": {
                                                            "id": "ReferenceID",
                                                            "type": "ADAPTER"
                                                        },
                                                        "value": "email"
                                                    },
                                                    "subject": {
                                                        "source": {
                                                            "id": "ReferenceID",
                                                            "type": "ADAPTER"
                                                        },
                                                        "value": "subject"
                                                    }
                                                },
                                                "attributeSources": [],
                                                "issuanceCriteria": {"conditionalCriteria": []}
                                            },
                                            "authenticationPolicyContractRef": {
                                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationPolicyContracts/Zxp6N6W5PH9onACT",
                                                "id": "Zxp6N6W5PH9onACT"
                                            },
                                            "context": "Success",
                                            "type": "APC_MAPPING"
                                        }}
                                    ],
                                    "action": {
                                        "authenticationSource": {
                                            "type": "IDP_ADAPTER",
                                            "sourceRef": {
                                                "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/ReferenceID",
                                                "id": "ReferenceID"
                                            }
                                        },
                                        "context": "Yes",
                                        "type": "AUTHN_SOURCE"
                                    }
                                }
                            ],
                            "action": {
                                "authenticationSelectorRef": {
                                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationSelectors/RefIDSelector",
                                    "id": "RefIDSelector"
                                },
                                "type": "AUTHN_SELECTOR"
                            }
                        }
                    },
                    {
                            "rootNode": {
                                "action": {
                                    "type": "AUTHN_SELECTOR",
                                    "authenticationSelectorRef": {
                                        "id": "LoadTestSelector",
                                        "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/authenticationSelectors/LoadTestSelector"
                                    }
                                },
                                "children": [
                                    {
                                        "action": {
                                            "type": "CONTINUE",
                                            "context": "No"
                                        }
                                    },
                                    {
                                        "action": {
                                            "type": "AUTHN_SOURCE",
                                            "context": "Yes",
                                            "authenticationSource": {
                                                "type": "IDP_ADAPTER",
                                                "sourceRef": {
                                                    "id": "LoadTestDummy1",
                                                    "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/idp/adapters/LoadTestDummy1"
                                                }
                                            }
                                        },
                                        "children": [
                                            {
                                                "action": {
                                                    "type": "DONE",
                                                    "context": "Fail"
                                                }
                                            },
                                            {
                                                "action": {
                                                    "type": "AUTHN_SOURCE",
                                                    "context": "Success",
                                                    "authenticationSource": {
                                                        "type": "IDP_ADAPTER",
                                                        "sourceRef": {
                                                            "id": "LoadTestDummy2",
                                                            "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/idp/adapters/LoadTestDummy2"
                                                        }
                                                    }
                                                },
                                                "children": [
                                                    {
                                                        "action": {
                                                            "type": "DONE",
                                                            "context": "Fail"
                                                        }
                                                    },
                                                    {
                                                        "action": {
                                                            "type": "AUTHN_SOURCE",
                                                            "context": "Success",
                                                            "authenticationSource": {
                                                                "type": "IDP_ADAPTER",
                                                                "sourceRef": {
                                                                    "id": "LoadTestDummy3",
                                                                    "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/idp/adapters/LoadTestDummy3"
                                                                }
                                                            }
                                                        },
                                                        "children": [
                                                            {
                                                                "action": {
                                                                    "type": "DONE",
                                                                    "context": "Fail"
                                                                }
                                                            },
                                                            {
                                                                "action": {
                                                                    "type": "APC_MAPPING",
                                                                    "context": "Success",
                                                                    "authenticationPolicyContractRef": {
                                                                        "id": "QspymyEwcU7EQAOm",
                                                                        "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/authenticationPolicyContracts/QspymyEwcU7EQAOm"
                                                                    },
                                                                    "attributeMapping": {
                                                                        "attributeSources": [],
                                                                        "attributeContractFulfillment": {
                                                                            "jwt": {
                                                                                "source": {
                                                                                    "type": "TEXT"
                                                                                },
                                                                                "value": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6IkludGVybmV0QmFja2VuZF9SUzI1NiJ9.eyJpc3MiOiJJbnRlcm5ldEJhY2tlbmQiLCJzdWIiOiJDMDExMTExMSIsImF1ZCI6ImF1ZGllbmNlMSIsIm5iZiI6MTUxMDMxMTAxMywiZXhwIjoxNTEwMzU0MjEzLCJpYXQiOjE1MTAzMTEwMTMsImp0aSI6IjBmNTJiY2YzLTQzM2EtNGQ2MC05MzQ2LWI4YjRjYWQwNGZiZiIsIm1pcyI6ImE6QjEyMzQ1Njc4OTAxMjM0NTY3ODk6RjAwMDAwOm9yZzplbnYifQ.QmjPE5UwjFmOQfxUQJ17vnJG91y1Gh2JxcfhxtG_UcUqZhWCHknXzSnYan07c4kenAtiwajmWIaju6BX8WfI3mQR-pLNQt1aKM6pAfCTAYWJrcULJN9ZBNtKqMxnTVza_LuhzGsubFhPcG_uC6XRWgKfULtQYFEbzA1GtWbFsJ7AEYvMakNy1M8jaSN5GNqkF3Z-srGRyleN4sozpxPjJeaAUqL5RVSQIcvqc1GoWd8g-84JPeGWEB-Ee-dCD2ZqV4Vrod53bnV-_x3GInyAqZMsRSwxJp3Jzveuk9aSS-lly9vzEOCPDEB7OuYUYmemN7z8p_DBdjYrv8Nlrl4BuA"
                                                                            },
                                                                            "subject": {
                                                                                "source": {
                                                                                    "type": "ADAPTER",
                                                                                    "id": "LoadTestDummy3"
                                                                                },
                                                                                "value": "subject"
                                                                            },
                                                                            "authorisation_id": {
                                                                                "source": {
                                                                                    "type": "TEXT"
                                                                                },
                                                                                "value": "12334567-e89b-12a3-b456-426614124000"
                                                                            },
                                                                            "resources": {
                                                                                "source": {
                                                                                    "type": "TEXT"
                                                                                },
                                                                                "value": "example/resourcesPath/resource/12334567-e89b-12a3-b456-426614124000"
                                                                            },
                                                                            "extra_data_test": {
                                                                                "source": {
                                                                                    "type": "TEXT"
                                                                                },
                                                                                "value": "this is a claim to add extra information to the payload"
                                                                            },
                                                                            "extra_data_backpack": {
                                                                                "source": {
                                                                                    "type": "TEXT"
                                                                                },
                                                                                "value": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla id vestibulum nibh. Donec sollicitudin condimentum luctus. Aliquam molestie eros et tellus vulputate rutrum. Vivamus non dui ac urna molestie gravida. Fusce ultrices, metus eu fringilla euismod, nulla odio gravida arcu, at faucibus lorem diam eu magna. Donec finibus, dolor nec ornare viverra, lacus nibh sollicitudin diam, id ultrices velit diam in dolor. Vestibulum varius eros id nunc cursus, ac placerat dui congue. Aliquam vel ligula ex. Proin tempus magna placerat, elementum neque et, cursus metus. Praesent ornare a ipsum non convallis. Pellentesque maximus, magna eget scelerisque posuere, est magna blandit turpis, nec efficitur ante odio vel velit. Duis ultrices aliquet felis, in tempor ex gravida vel. Vivamus varius efficitur justo vel iaculis. Nullam in venenatis est. Suspendisse efficitur."
                                                                            }
                                                                        },
                                                                        "issuanceCriteria": {
                                                                            "conditionalCriteria": []
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            },
                            "name": "Load Test Policy",
                            "enabled": true,
                            "authenticationApiApplicationRef": {
                                "id": "L7hvyKCPRQP4WfTTN9S5Uw9sw",
                                "location": "https://admin.suks1ew2accsinnovgene002.sandbox.tlzproject.com:9999/pf-admin-api/v1/authenticationApi/applications/L7hvyKCPRQP4WfTTN9S5Uw9sw"
                            }
                        },
                {
                    "name": "Default AuthN Policy",
                    "enabled": true,
                    "rootNode": {
                        "children": [
                            {"action": {
                                "context": "Fail",
                                "type": "DONE"
                            }},
                            {
                                "children": [
                                    {"action": {
                                        "context": "Fail",
                                        "type": "DONE"
                                    }},
                                    {"action": {
                                        "localIdentityRef": {
                                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/localIdentity/identityProfiles/RBSQIwi5KWYN9ZGK",
                                            "id": "RBSQIwi5KWYN9ZGK"
                                        },
                                        "inboundMapping": {
                                            "attributeContractFulfillment": {"pf.local.identity.unique.id": {
                                                "source": {
                                                    "id": "HTMLFormPD",
                                                    "type": "ADAPTER"
                                                },
                                                "value": "username"
                                            }},
                                            "attributeSources": [],
                                            "issuanceCriteria": {"conditionalCriteria": []}
                                        },
                                        "context": "Success",
                                        "outboundAttributeMapping": {
                                            "attributeContractFulfillment": {
                                                "mail": {
                                                    "source": {
                                                        "id": "RBSQIwi5KWYN9ZGK",
                                                        "type": "LOCAL_IDENTITY_PROFILE"
                                                    },
                                                    "value": "mail"
                                                },
                                                "subject": {
                                                    "source": {
                                                        "id": "RBSQIwi5KWYN9ZGK",
                                                        "type": "LOCAL_IDENTITY_PROFILE"
                                                    },
                                                    "value": "entryUUID"
                                                }
                                            },
                                            "attributeSources": [],
                                            "issuanceCriteria": {"conditionalCriteria": []}
                                        },
                                        "type": "LOCAL_IDENTITY_MAPPING"
                                    }}
                                ],
                                "action": {
                                    "authenticationSource": {
                                        "type": "IDP_ADAPTER",
                                        "sourceRef": {
                                            "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/OTPnew",
                                            "id": "OTPnew"
                                        }
                                    },
                                    "context": "Success",
                                    "inputUserIdMapping": {
                                        "source": {
                                            "id": "HTMLFormPD",
                                            "type": "ADAPTER"
                                        },
                                        "value": "username"
                                    },
                                    "userIdAuthenticated": true,
                                    "type": "AUTHN_SOURCE"
                                }
                            }
                        ],
                        "action": {
                            "authenticationSource": {
                                "type": "IDP_ADAPTER",
                                "sourceRef": {
                                    "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/idp/adapters/HTMLFormPD",
                                    "id": "HTMLFormPD"
                                }
                            },
                            "type": "AUTHN_SOURCE"
                        }
                    }
                }
                ],
                "trackedHttpParameters": []
            }],
            "resourceType": "/authenticationPolicies/default"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "apiEnabled": false,
                "enableApiDescriptions": true
            }],
            "resourceType": "/authenticationApi/settings"
        },
        {
            "operationType": "SAVE",
            "items": [{
                "enableSpAuthnSelection": false,
                "enableIdpAuthnSelection": true
            }],
            "resourceType": "/authenticationPolicies/settings"
        },
        {
            "resourceType": "/authenticationApi/settings",
            "operationType": "SAVE",
            "items": [
                {
                    "apiEnabled": true,
                    "defaultApplicationRef": {
                        "id": "L7hvyKCPRQP4WfTTN9S5Uw9sw",
                        "location": "https://${PF_ADMIN_PUBLIC_HOSTNAME}:${PF_ADMIN_PUBLIC_PORT_HTTPS}/pf-admin-api/v1/authenticationApi/applications/L7hvyKCPRQP4WfTTN9S5Uw9sw"
                    },
                    "enableApiDescriptions": true
                }
            ]
        }
    ]
}